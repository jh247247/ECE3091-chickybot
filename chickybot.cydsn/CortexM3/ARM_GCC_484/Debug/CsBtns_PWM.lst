ARM GAS  C:\Users\Nick\AppData\Local\Temp\ccU8SSpN.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"CsBtns_PWM.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.CsBtns_PWM_Enable,"ax",%progbits
  19              		.align	2
  20              		.global	CsBtns_PWM_Enable
  21              		.thumb
  22              		.thumb_func
  23              		.type	CsBtns_PWM_Enable, %function
  24              	CsBtns_PWM_Enable:
  25              	.LFB2:
  26              		.file 1 ".\\Generated_Source\\PSoC5\\CsBtns_PWM.c"
   1:.\Generated_Source\PSoC5/CsBtns_PWM.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/CsBtns_PWM.c **** * File Name: CsBtns_PWM.c
   3:.\Generated_Source\PSoC5/CsBtns_PWM.c **** * Version 3.30
   4:.\Generated_Source\PSoC5/CsBtns_PWM.c **** *
   5:.\Generated_Source\PSoC5/CsBtns_PWM.c **** * Description:
   6:.\Generated_Source\PSoC5/CsBtns_PWM.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:.\Generated_Source\PSoC5/CsBtns_PWM.c **** *  comparitors. Each instance of this user module is capable of generating
   8:.\Generated_Source\PSoC5/CsBtns_PWM.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:.\Generated_Source\PSoC5/CsBtns_PWM.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:.\Generated_Source\PSoC5/CsBtns_PWM.c **** *  The compare value output may be configured to be active when the present
  11:.\Generated_Source\PSoC5/CsBtns_PWM.c **** *  counter is less than or less than/equal to the compare value.
  12:.\Generated_Source\PSoC5/CsBtns_PWM.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:.\Generated_Source\PSoC5/CsBtns_PWM.c **** *  width wide when the counter is equal to zero.
  14:.\Generated_Source\PSoC5/CsBtns_PWM.c **** *
  15:.\Generated_Source\PSoC5/CsBtns_PWM.c **** * Note:
  16:.\Generated_Source\PSoC5/CsBtns_PWM.c **** *
  17:.\Generated_Source\PSoC5/CsBtns_PWM.c **** *******************************************************************************
  18:.\Generated_Source\PSoC5/CsBtns_PWM.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:.\Generated_Source\PSoC5/CsBtns_PWM.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:.\Generated_Source\PSoC5/CsBtns_PWM.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:.\Generated_Source\PSoC5/CsBtns_PWM.c **** * the software package with which this file was provided.
  22:.\Generated_Source\PSoC5/CsBtns_PWM.c **** ********************************************************************************/
  23:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
  24:.\Generated_Source\PSoC5/CsBtns_PWM.c **** #include "CsBtns_PWM.h"
  25:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
  26:.\Generated_Source\PSoC5/CsBtns_PWM.c **** /* Error message for removed <resource> through optimization */
  27:.\Generated_Source\PSoC5/CsBtns_PWM.c **** #ifdef CsBtns_PWM_PWMUDB_genblk1_ctrlreg__REMOVED
  28:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:.\Generated_Source\PSoC5/CsBtns_PWM.c ****          constant 1 for reset. This will prevent the component from operating.
  30:.\Generated_Source\PSoC5/CsBtns_PWM.c **** #endif /* CsBtns_PWM_PWMUDB_genblk1_ctrlreg__REMOVED */
  31:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
ARM GAS  C:\Users\Nick\AppData\Local\Temp\ccU8SSpN.s 			page 2


  32:.\Generated_Source\PSoC5/CsBtns_PWM.c **** uint8 CsBtns_PWM_initVar = 0u;
  33:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
  34:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
  35:.\Generated_Source\PSoC5/CsBtns_PWM.c **** /*******************************************************************************
  36:.\Generated_Source\PSoC5/CsBtns_PWM.c **** * Function Name: CsBtns_PWM_Start
  37:.\Generated_Source\PSoC5/CsBtns_PWM.c **** ********************************************************************************
  38:.\Generated_Source\PSoC5/CsBtns_PWM.c **** *
  39:.\Generated_Source\PSoC5/CsBtns_PWM.c **** * Summary:
  40:.\Generated_Source\PSoC5/CsBtns_PWM.c **** *  The start function initializes the pwm with the default values, the
  41:.\Generated_Source\PSoC5/CsBtns_PWM.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:.\Generated_Source\PSoC5/CsBtns_PWM.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:.\Generated_Source\PSoC5/CsBtns_PWM.c **** *
  44:.\Generated_Source\PSoC5/CsBtns_PWM.c **** * Parameters:
  45:.\Generated_Source\PSoC5/CsBtns_PWM.c **** *  None
  46:.\Generated_Source\PSoC5/CsBtns_PWM.c **** *
  47:.\Generated_Source\PSoC5/CsBtns_PWM.c **** * Return:
  48:.\Generated_Source\PSoC5/CsBtns_PWM.c **** *  None
  49:.\Generated_Source\PSoC5/CsBtns_PWM.c **** *
  50:.\Generated_Source\PSoC5/CsBtns_PWM.c **** * Global variables:
  51:.\Generated_Source\PSoC5/CsBtns_PWM.c **** *  CsBtns_PWM_initVar: Is modified when this function is called for the
  52:.\Generated_Source\PSoC5/CsBtns_PWM.c **** *   first time. Is used to ensure that initialization happens only once.
  53:.\Generated_Source\PSoC5/CsBtns_PWM.c **** *
  54:.\Generated_Source\PSoC5/CsBtns_PWM.c **** *******************************************************************************/
  55:.\Generated_Source\PSoC5/CsBtns_PWM.c **** void CsBtns_PWM_Start(void) 
  56:.\Generated_Source\PSoC5/CsBtns_PWM.c **** {
  57:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     /* If not Initialized then initialize all required hardware and software */
  58:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     if(CsBtns_PWM_initVar == 0u)
  59:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     {
  60:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         CsBtns_PWM_Init();
  61:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         CsBtns_PWM_initVar = 1u;
  62:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     }
  63:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     CsBtns_PWM_Enable();
  64:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
  65:.\Generated_Source\PSoC5/CsBtns_PWM.c **** }
  66:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
  67:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
  68:.\Generated_Source\PSoC5/CsBtns_PWM.c **** /*******************************************************************************
  69:.\Generated_Source\PSoC5/CsBtns_PWM.c **** * Function Name: CsBtns_PWM_Init
  70:.\Generated_Source\PSoC5/CsBtns_PWM.c **** ********************************************************************************
  71:.\Generated_Source\PSoC5/CsBtns_PWM.c **** *
  72:.\Generated_Source\PSoC5/CsBtns_PWM.c **** * Summary:
  73:.\Generated_Source\PSoC5/CsBtns_PWM.c **** *  Initialize component's parameters to the parameters set by user in the
  74:.\Generated_Source\PSoC5/CsBtns_PWM.c **** *  customizer of the component placed onto schematic. Usually called in
  75:.\Generated_Source\PSoC5/CsBtns_PWM.c **** *  CsBtns_PWM_Start().
  76:.\Generated_Source\PSoC5/CsBtns_PWM.c **** *
  77:.\Generated_Source\PSoC5/CsBtns_PWM.c **** * Parameters:
  78:.\Generated_Source\PSoC5/CsBtns_PWM.c **** *  None
  79:.\Generated_Source\PSoC5/CsBtns_PWM.c **** *
  80:.\Generated_Source\PSoC5/CsBtns_PWM.c **** * Return:
  81:.\Generated_Source\PSoC5/CsBtns_PWM.c **** *  None
  82:.\Generated_Source\PSoC5/CsBtns_PWM.c **** *
  83:.\Generated_Source\PSoC5/CsBtns_PWM.c **** *******************************************************************************/
  84:.\Generated_Source\PSoC5/CsBtns_PWM.c **** void CsBtns_PWM_Init(void) 
  85:.\Generated_Source\PSoC5/CsBtns_PWM.c **** {
  86:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     #if (CsBtns_PWM_UsingFixedFunction || CsBtns_PWM_UseControl)
  87:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         uint8 ctrl;
  88:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     #endif /* (CsBtns_PWM_UsingFixedFunction || CsBtns_PWM_UseControl) */
ARM GAS  C:\Users\Nick\AppData\Local\Temp\ccU8SSpN.s 			page 3


  89:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
  90:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     #if(!CsBtns_PWM_UsingFixedFunction)
  91:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         #if(CsBtns_PWM_UseStatus)
  92:.\Generated_Source\PSoC5/CsBtns_PWM.c ****             /* Interrupt State Backup for Critical Region*/
  93:.\Generated_Source\PSoC5/CsBtns_PWM.c ****             uint8 CsBtns_PWM_interruptState;
  94:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         #endif /* (CsBtns_PWM_UseStatus) */
  95:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     #endif /* (!CsBtns_PWM_UsingFixedFunction) */
  96:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
  97:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     #if (CsBtns_PWM_UsingFixedFunction)
  98:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         /* You are allowed to write the compare value (FF only) */
  99:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         CsBtns_PWM_CONTROL |= CsBtns_PWM_CFG0_MODE;
 100:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         #if (CsBtns_PWM_DeadBand2_4)
 101:.\Generated_Source\PSoC5/CsBtns_PWM.c ****             CsBtns_PWM_CONTROL |= CsBtns_PWM_CFG0_DB;
 102:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         #endif /* (CsBtns_PWM_DeadBand2_4) */
 103:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 104:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         ctrl = CsBtns_PWM_CONTROL3 & ((uint8 )(~CsBtns_PWM_CTRL_CMPMODE1_MASK));
 105:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         CsBtns_PWM_CONTROL3 = ctrl | CsBtns_PWM_DEFAULT_COMPARE1_MODE;
 106:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 107:.\Generated_Source\PSoC5/CsBtns_PWM.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         CsBtns_PWM_RT1 &= ((uint8)(~CsBtns_PWM_RT1_MASK));
 109:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         CsBtns_PWM_RT1 |= CsBtns_PWM_SYNC;
 110:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 111:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         CsBtns_PWM_RT1 &= ((uint8)(~CsBtns_PWM_SYNCDSI_MASK));
 113:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         CsBtns_PWM_RT1 |= CsBtns_PWM_SYNCDSI_EN;
 114:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 115:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     #elif (CsBtns_PWM_UseControl)
 116:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         /* Set the default compare mode defined in the parameter */
 117:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         ctrl = CsBtns_PWM_CONTROL & ((uint8)(~CsBtns_PWM_CTRL_CMPMODE2_MASK)) &
 118:.\Generated_Source\PSoC5/CsBtns_PWM.c ****                 ((uint8)(~CsBtns_PWM_CTRL_CMPMODE1_MASK));
 119:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         CsBtns_PWM_CONTROL = ctrl | CsBtns_PWM_DEFAULT_COMPARE2_MODE |
 120:.\Generated_Source\PSoC5/CsBtns_PWM.c ****                                    CsBtns_PWM_DEFAULT_COMPARE1_MODE;
 121:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     #endif /* (CsBtns_PWM_UsingFixedFunction) */
 122:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 123:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     #if (!CsBtns_PWM_UsingFixedFunction)
 124:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         #if (CsBtns_PWM_Resolution == 8)
 125:.\Generated_Source\PSoC5/CsBtns_PWM.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:.\Generated_Source\PSoC5/CsBtns_PWM.c ****             CsBtns_PWM_AUX_CONTROLDP0 |= (CsBtns_PWM_AUX_CTRL_FIFO0_CLR);
 127:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         #else /* (CsBtns_PWM_Resolution == 16)*/
 128:.\Generated_Source\PSoC5/CsBtns_PWM.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:.\Generated_Source\PSoC5/CsBtns_PWM.c ****             CsBtns_PWM_AUX_CONTROLDP0 |= (CsBtns_PWM_AUX_CTRL_FIFO0_CLR);
 130:.\Generated_Source\PSoC5/CsBtns_PWM.c ****             CsBtns_PWM_AUX_CONTROLDP1 |= (CsBtns_PWM_AUX_CTRL_FIFO0_CLR);
 131:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         #endif /* (CsBtns_PWM_Resolution == 8) */
 132:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 133:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         CsBtns_PWM_WriteCounter(CsBtns_PWM_INIT_PERIOD_VALUE);
 134:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     #endif /* (!CsBtns_PWM_UsingFixedFunction) */
 135:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 136:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     CsBtns_PWM_WritePeriod(CsBtns_PWM_INIT_PERIOD_VALUE);
 137:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 138:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         #if (CsBtns_PWM_UseOneCompareMode)
 139:.\Generated_Source\PSoC5/CsBtns_PWM.c ****             CsBtns_PWM_WriteCompare(CsBtns_PWM_INIT_COMPARE_VALUE1);
 140:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         #else
 141:.\Generated_Source\PSoC5/CsBtns_PWM.c ****             CsBtns_PWM_WriteCompare1(CsBtns_PWM_INIT_COMPARE_VALUE1);
 142:.\Generated_Source\PSoC5/CsBtns_PWM.c ****             CsBtns_PWM_WriteCompare2(CsBtns_PWM_INIT_COMPARE_VALUE2);
 143:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         #endif /* (CsBtns_PWM_UseOneCompareMode) */
 144:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 145:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         #if (CsBtns_PWM_KillModeMinTime)
ARM GAS  C:\Users\Nick\AppData\Local\Temp\ccU8SSpN.s 			page 4


 146:.\Generated_Source\PSoC5/CsBtns_PWM.c ****             CsBtns_PWM_WriteKillTime(CsBtns_PWM_MinimumKillTime);
 147:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         #endif /* (CsBtns_PWM_KillModeMinTime) */
 148:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 149:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         #if (CsBtns_PWM_DeadBandUsed)
 150:.\Generated_Source\PSoC5/CsBtns_PWM.c ****             CsBtns_PWM_WriteDeadTime(CsBtns_PWM_INIT_DEAD_TIME);
 151:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         #endif /* (CsBtns_PWM_DeadBandUsed) */
 152:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 153:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     #if (CsBtns_PWM_UseStatus || CsBtns_PWM_UsingFixedFunction)
 154:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         CsBtns_PWM_SetInterruptMode(CsBtns_PWM_INIT_INTERRUPTS_MODE);
 155:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     #endif /* (CsBtns_PWM_UseStatus || CsBtns_PWM_UsingFixedFunction) */
 156:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 157:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     #if (CsBtns_PWM_UsingFixedFunction)
 158:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         CsBtns_PWM_GLOBAL_ENABLE |= CsBtns_PWM_BLOCK_EN_MASK;
 160:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         /* Set the Interrupt source to come from the status register */
 161:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         CsBtns_PWM_CONTROL2 |= CsBtns_PWM_CTRL2_IRQ_SEL;
 162:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     #else
 163:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         #if(CsBtns_PWM_UseStatus)
 164:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 165:.\Generated_Source\PSoC5/CsBtns_PWM.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:.\Generated_Source\PSoC5/CsBtns_PWM.c ****             /* Enter Critical Region*/
 167:.\Generated_Source\PSoC5/CsBtns_PWM.c ****             CsBtns_PWM_interruptState = CyEnterCriticalSection();
 168:.\Generated_Source\PSoC5/CsBtns_PWM.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:.\Generated_Source\PSoC5/CsBtns_PWM.c ****             CsBtns_PWM_STATUS_AUX_CTRL |= CsBtns_PWM_STATUS_ACTL_INT_EN_MASK;
 170:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 171:.\Generated_Source\PSoC5/CsBtns_PWM.c ****              /* Exit Critical Region*/
 172:.\Generated_Source\PSoC5/CsBtns_PWM.c ****             CyExitCriticalSection(CsBtns_PWM_interruptState);
 173:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 174:.\Generated_Source\PSoC5/CsBtns_PWM.c ****             /* Clear the FIFO to enable the CsBtns_PWM_STATUS_FIFOFULL
 175:.\Generated_Source\PSoC5/CsBtns_PWM.c ****                    bit to be set on FIFO full. */
 176:.\Generated_Source\PSoC5/CsBtns_PWM.c ****             CsBtns_PWM_ClearFIFO();
 177:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         #endif /* (CsBtns_PWM_UseStatus) */
 178:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     #endif /* (CsBtns_PWM_UsingFixedFunction) */
 179:.\Generated_Source\PSoC5/CsBtns_PWM.c **** }
 180:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 181:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 182:.\Generated_Source\PSoC5/CsBtns_PWM.c **** /*******************************************************************************
 183:.\Generated_Source\PSoC5/CsBtns_PWM.c **** * Function Name: CsBtns_PWM_Enable
 184:.\Generated_Source\PSoC5/CsBtns_PWM.c **** ********************************************************************************
 185:.\Generated_Source\PSoC5/CsBtns_PWM.c **** *
 186:.\Generated_Source\PSoC5/CsBtns_PWM.c **** * Summary:
 187:.\Generated_Source\PSoC5/CsBtns_PWM.c **** *  Enables the PWM block operation
 188:.\Generated_Source\PSoC5/CsBtns_PWM.c **** *
 189:.\Generated_Source\PSoC5/CsBtns_PWM.c **** * Parameters:
 190:.\Generated_Source\PSoC5/CsBtns_PWM.c **** *  None
 191:.\Generated_Source\PSoC5/CsBtns_PWM.c **** *
 192:.\Generated_Source\PSoC5/CsBtns_PWM.c **** * Return:
 193:.\Generated_Source\PSoC5/CsBtns_PWM.c **** *  None
 194:.\Generated_Source\PSoC5/CsBtns_PWM.c **** *
 195:.\Generated_Source\PSoC5/CsBtns_PWM.c **** * Side Effects:
 196:.\Generated_Source\PSoC5/CsBtns_PWM.c **** *  This works only if software enable mode is chosen
 197:.\Generated_Source\PSoC5/CsBtns_PWM.c **** *
 198:.\Generated_Source\PSoC5/CsBtns_PWM.c **** *******************************************************************************/
 199:.\Generated_Source\PSoC5/CsBtns_PWM.c **** void CsBtns_PWM_Enable(void) 
 200:.\Generated_Source\PSoC5/CsBtns_PWM.c **** {
  27              		.loc 1 200 0
  28              		.cfi_startproc
ARM GAS  C:\Users\Nick\AppData\Local\Temp\ccU8SSpN.s 			page 5


  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 201:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     /* Globally Enable the Fixed Function Block chosen */
 202:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     #if (CsBtns_PWM_UsingFixedFunction)
 203:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         CsBtns_PWM_GLOBAL_ENABLE |= CsBtns_PWM_BLOCK_EN_MASK;
  32              		.loc 1 203 0
  33 0000 084B     		ldr	r3, .L2
  34 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
  35 0004 42F00102 		orr	r2, r2, #1
  36 0008 1A70     		strb	r2, [r3]
 204:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         CsBtns_PWM_GLOBAL_STBY_ENABLE |= CsBtns_PWM_BLOCK_STBY_EN_MASK;
  37              		.loc 1 204 0
  38 000a 1033     		adds	r3, r3, #16
  39 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
  40 000e 42F00102 		orr	r2, r2, #1
  41 0012 1A70     		strb	r2, [r3]
 205:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     #endif /* (CsBtns_PWM_UsingFixedFunction) */
 206:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 207:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     /* Enable the PWM from the control register  */
 208:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     #if (CsBtns_PWM_UseControl || CsBtns_PWM_UsingFixedFunction)
 209:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         CsBtns_PWM_CONTROL |= CsBtns_PWM_CTRL_ENABLE;
  42              		.loc 1 209 0
  43 0014 03F64D33 		addw	r3, r3, #2893
  44 0018 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
  45 001a 42F00102 		orr	r2, r2, #1
  46 001e 1A70     		strb	r2, [r3]
  47 0020 7047     		bx	lr
  48              	.L3:
  49 0022 00BF     		.align	2
  50              	.L2:
  51 0024 A3430040 		.word	1073759139
  52              		.cfi_endproc
  53              	.LFE2:
  54              		.size	CsBtns_PWM_Enable, .-CsBtns_PWM_Enable
  55              		.section	.text.CsBtns_PWM_Stop,"ax",%progbits
  56              		.align	2
  57              		.global	CsBtns_PWM_Stop
  58              		.thumb
  59              		.thumb_func
  60              		.type	CsBtns_PWM_Stop, %function
  61              	CsBtns_PWM_Stop:
  62              	.LFB3:
 210:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     #endif /* (CsBtns_PWM_UseControl || CsBtns_PWM_UsingFixedFunction) */
 211:.\Generated_Source\PSoC5/CsBtns_PWM.c **** }
 212:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 213:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 214:.\Generated_Source\PSoC5/CsBtns_PWM.c **** /*******************************************************************************
 215:.\Generated_Source\PSoC5/CsBtns_PWM.c **** * Function Name: CsBtns_PWM_Stop
 216:.\Generated_Source\PSoC5/CsBtns_PWM.c **** ********************************************************************************
 217:.\Generated_Source\PSoC5/CsBtns_PWM.c **** *
 218:.\Generated_Source\PSoC5/CsBtns_PWM.c **** * Summary:
 219:.\Generated_Source\PSoC5/CsBtns_PWM.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:.\Generated_Source\PSoC5/CsBtns_PWM.c **** *  interrupts.
 221:.\Generated_Source\PSoC5/CsBtns_PWM.c **** *
 222:.\Generated_Source\PSoC5/CsBtns_PWM.c **** * Parameters:
 223:.\Generated_Source\PSoC5/CsBtns_PWM.c **** *  None
ARM GAS  C:\Users\Nick\AppData\Local\Temp\ccU8SSpN.s 			page 6


 224:.\Generated_Source\PSoC5/CsBtns_PWM.c **** *
 225:.\Generated_Source\PSoC5/CsBtns_PWM.c **** * Return:
 226:.\Generated_Source\PSoC5/CsBtns_PWM.c **** *  None
 227:.\Generated_Source\PSoC5/CsBtns_PWM.c **** *
 228:.\Generated_Source\PSoC5/CsBtns_PWM.c **** * Side Effects:
 229:.\Generated_Source\PSoC5/CsBtns_PWM.c **** *  If the Enable mode is set to Hardware only then this function
 230:.\Generated_Source\PSoC5/CsBtns_PWM.c **** *  has no effect on the operation of the PWM
 231:.\Generated_Source\PSoC5/CsBtns_PWM.c **** *
 232:.\Generated_Source\PSoC5/CsBtns_PWM.c **** *******************************************************************************/
 233:.\Generated_Source\PSoC5/CsBtns_PWM.c **** void CsBtns_PWM_Stop(void) 
 234:.\Generated_Source\PSoC5/CsBtns_PWM.c **** {
  63              		.loc 1 234 0
  64              		.cfi_startproc
  65              		@ args = 0, pretend = 0, frame = 0
  66              		@ frame_needed = 0, uses_anonymous_args = 0
  67              		@ link register save eliminated.
 235:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     #if (CsBtns_PWM_UseControl || CsBtns_PWM_UsingFixedFunction)
 236:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         CsBtns_PWM_CONTROL &= ((uint8)(~CsBtns_PWM_CTRL_ENABLE));
  68              		.loc 1 236 0
  69 0000 084B     		ldr	r3, .L5
  70 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
  71 0004 02F0FE02 		and	r2, r2, #254
  72 0008 1A70     		strb	r2, [r3]
 237:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     #endif /* (CsBtns_PWM_UseControl || CsBtns_PWM_UsingFixedFunction) */
 238:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 239:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     /* Globally disable the Fixed Function Block chosen */
 240:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     #if (CsBtns_PWM_UsingFixedFunction)
 241:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         CsBtns_PWM_GLOBAL_ENABLE &= ((uint8)(~CsBtns_PWM_BLOCK_EN_MASK));
  73              		.loc 1 241 0
  74 000a A3F65D33 		subw	r3, r3, #2909
  75 000e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
  76 0010 02F0FE02 		and	r2, r2, #254
  77 0014 1A70     		strb	r2, [r3]
 242:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         CsBtns_PWM_GLOBAL_STBY_ENABLE &= ((uint8)(~CsBtns_PWM_BLOCK_STBY_EN_MASK));
  78              		.loc 1 242 0
  79 0016 1033     		adds	r3, r3, #16
  80 0018 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
  81 001a 02F0FE02 		and	r2, r2, #254
  82 001e 1A70     		strb	r2, [r3]
  83 0020 7047     		bx	lr
  84              	.L6:
  85 0022 00BF     		.align	2
  86              	.L5:
  87 0024 004F0040 		.word	1073762048
  88              		.cfi_endproc
  89              	.LFE3:
  90              		.size	CsBtns_PWM_Stop, .-CsBtns_PWM_Stop
  91              		.section	.text.CsBtns_PWM_WritePeriod,"ax",%progbits
  92              		.align	2
  93              		.global	CsBtns_PWM_WritePeriod
  94              		.thumb
  95              		.thumb_func
  96              		.type	CsBtns_PWM_WritePeriod, %function
  97              	CsBtns_PWM_WritePeriod:
  98              	.LFB4:
 243:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     #endif /* (CsBtns_PWM_UsingFixedFunction) */
 244:.\Generated_Source\PSoC5/CsBtns_PWM.c **** }
ARM GAS  C:\Users\Nick\AppData\Local\Temp\ccU8SSpN.s 			page 7


 245:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 246:.\Generated_Source\PSoC5/CsBtns_PWM.c **** #if (CsBtns_PWM_UseOneCompareMode)
 247:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     #if (CsBtns_PWM_CompareMode1SW)
 248:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 249:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 250:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         /*******************************************************************************
 251:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         * Function Name: CsBtns_PWM_SetCompareMode
 252:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         ********************************************************************************
 253:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         *
 254:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         * Summary:
 255:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
 256:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         *  Center Align Mode or One Output Mode.
 257:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         *
 258:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         * Parameters:
 259:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         *                defined in the H file as input arguments.
 261:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         *
 262:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         * Return:
 263:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         *  None
 264:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         *
 265:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         *******************************************************************************/
 266:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         void CsBtns_PWM_SetCompareMode(uint8 comparemode) 
 267:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         {
 268:.\Generated_Source\PSoC5/CsBtns_PWM.c ****             #if(CsBtns_PWM_UsingFixedFunction)
 269:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 270:.\Generated_Source\PSoC5/CsBtns_PWM.c ****                 #if(0 != CsBtns_PWM_CTRL_CMPMODE1_SHIFT)
 271:.\Generated_Source\PSoC5/CsBtns_PWM.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << CsBtns_PWM_CTRL_CMPMOD
 272:.\Generated_Source\PSoC5/CsBtns_PWM.c ****                 #else
 273:.\Generated_Source\PSoC5/CsBtns_PWM.c ****                     uint8 comparemodemasked = comparemode;
 274:.\Generated_Source\PSoC5/CsBtns_PWM.c ****                 #endif /* (0 != CsBtns_PWM_CTRL_CMPMODE1_SHIFT) */
 275:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 276:.\Generated_Source\PSoC5/CsBtns_PWM.c ****                 CsBtns_PWM_CONTROL3 &= ((uint8)(~CsBtns_PWM_CTRL_CMPMODE1_MASK)); /*Clear Existing 
 277:.\Generated_Source\PSoC5/CsBtns_PWM.c ****                 CsBtns_PWM_CONTROL3 |= comparemodemasked;
 278:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 279:.\Generated_Source\PSoC5/CsBtns_PWM.c ****             #elif (CsBtns_PWM_UseControl)
 280:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 281:.\Generated_Source\PSoC5/CsBtns_PWM.c ****                 #if(0 != CsBtns_PWM_CTRL_CMPMODE1_SHIFT)
 282:.\Generated_Source\PSoC5/CsBtns_PWM.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << CsBtns_PWM_CTRL_CMPMO
 283:.\Generated_Source\PSoC5/CsBtns_PWM.c ****                                                 CsBtns_PWM_CTRL_CMPMODE1_MASK;
 284:.\Generated_Source\PSoC5/CsBtns_PWM.c ****                 #else
 285:.\Generated_Source\PSoC5/CsBtns_PWM.c ****                     uint8 comparemode1masked = comparemode & CsBtns_PWM_CTRL_CMPMODE1_MASK;
 286:.\Generated_Source\PSoC5/CsBtns_PWM.c ****                 #endif /* (0 != CsBtns_PWM_CTRL_CMPMODE1_SHIFT) */
 287:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 288:.\Generated_Source\PSoC5/CsBtns_PWM.c ****                 #if(0 != CsBtns_PWM_CTRL_CMPMODE2_SHIFT)
 289:.\Generated_Source\PSoC5/CsBtns_PWM.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << CsBtns_PWM_CTRL_CMPMO
 290:.\Generated_Source\PSoC5/CsBtns_PWM.c ****                                                CsBtns_PWM_CTRL_CMPMODE2_MASK;
 291:.\Generated_Source\PSoC5/CsBtns_PWM.c ****                 #else
 292:.\Generated_Source\PSoC5/CsBtns_PWM.c ****                     uint8 comparemode2masked = comparemode & CsBtns_PWM_CTRL_CMPMODE2_MASK;
 293:.\Generated_Source\PSoC5/CsBtns_PWM.c ****                 #endif /* (0 != CsBtns_PWM_CTRL_CMPMODE2_SHIFT) */
 294:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 295:.\Generated_Source\PSoC5/CsBtns_PWM.c ****                 /*Clear existing mode */
 296:.\Generated_Source\PSoC5/CsBtns_PWM.c ****                 CsBtns_PWM_CONTROL &= ((uint8)(~(CsBtns_PWM_CTRL_CMPMODE1_MASK |
 297:.\Generated_Source\PSoC5/CsBtns_PWM.c ****                                             CsBtns_PWM_CTRL_CMPMODE2_MASK)));
 298:.\Generated_Source\PSoC5/CsBtns_PWM.c ****                 CsBtns_PWM_CONTROL |= (comparemode1masked | comparemode2masked);
 299:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 300:.\Generated_Source\PSoC5/CsBtns_PWM.c ****             #else
 301:.\Generated_Source\PSoC5/CsBtns_PWM.c ****                 uint8 temp = comparemode;
ARM GAS  C:\Users\Nick\AppData\Local\Temp\ccU8SSpN.s 			page 8


 302:.\Generated_Source\PSoC5/CsBtns_PWM.c ****             #endif /* (CsBtns_PWM_UsingFixedFunction) */
 303:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         }
 304:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     #endif /* CsBtns_PWM_CompareMode1SW */
 305:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 306:.\Generated_Source\PSoC5/CsBtns_PWM.c **** #else /* UseOneCompareMode */
 307:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 308:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     #if (CsBtns_PWM_CompareMode1SW)
 309:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 310:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 311:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         /*******************************************************************************
 312:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         * Function Name: CsBtns_PWM_SetCompareMode1
 313:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         ********************************************************************************
 314:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         *
 315:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         * Summary:
 316:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         *
 318:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         * Parameters:
 319:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         *                defined in the H file as input arguments.
 321:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         *
 322:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         * Return:
 323:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         *  None
 324:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         *
 325:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         *******************************************************************************/
 326:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         void CsBtns_PWM_SetCompareMode1(uint8 comparemode) 
 327:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         {
 328:.\Generated_Source\PSoC5/CsBtns_PWM.c ****             #if(0 != CsBtns_PWM_CTRL_CMPMODE1_SHIFT)
 329:.\Generated_Source\PSoC5/CsBtns_PWM.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << CsBtns_PWM_CTRL_CMPMODE1_S
 330:.\Generated_Source\PSoC5/CsBtns_PWM.c ****                                            CsBtns_PWM_CTRL_CMPMODE1_MASK;
 331:.\Generated_Source\PSoC5/CsBtns_PWM.c ****             #else
 332:.\Generated_Source\PSoC5/CsBtns_PWM.c ****                 uint8 comparemodemasked = comparemode & CsBtns_PWM_CTRL_CMPMODE1_MASK;
 333:.\Generated_Source\PSoC5/CsBtns_PWM.c ****             #endif /* (0 != CsBtns_PWM_CTRL_CMPMODE1_SHIFT) */
 334:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 335:.\Generated_Source\PSoC5/CsBtns_PWM.c ****             #if (CsBtns_PWM_UseControl)
 336:.\Generated_Source\PSoC5/CsBtns_PWM.c ****                 CsBtns_PWM_CONTROL &= ((uint8)(~CsBtns_PWM_CTRL_CMPMODE1_MASK)); /*Clear existing m
 337:.\Generated_Source\PSoC5/CsBtns_PWM.c ****                 CsBtns_PWM_CONTROL |= comparemodemasked;
 338:.\Generated_Source\PSoC5/CsBtns_PWM.c ****             #endif /* (CsBtns_PWM_UseControl) */
 339:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         }
 340:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     #endif /* CsBtns_PWM_CompareMode1SW */
 341:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 342:.\Generated_Source\PSoC5/CsBtns_PWM.c **** #if (CsBtns_PWM_CompareMode2SW)
 343:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 344:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 345:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     /*******************************************************************************
 346:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     * Function Name: CsBtns_PWM_SetCompareMode2
 347:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     ********************************************************************************
 348:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *
 349:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     * Summary:
 350:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *
 352:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     * Parameters:
 353:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *                defined in the H file as input arguments.
 355:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *
 356:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     * Return:
 357:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *  None
 358:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *
ARM GAS  C:\Users\Nick\AppData\Local\Temp\ccU8SSpN.s 			page 9


 359:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *******************************************************************************/
 360:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     void CsBtns_PWM_SetCompareMode2(uint8 comparemode) 
 361:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     {
 362:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 363:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         #if(0 != CsBtns_PWM_CTRL_CMPMODE2_SHIFT)
 364:.\Generated_Source\PSoC5/CsBtns_PWM.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << CsBtns_PWM_CTRL_CMPMODE2_SHIFT
 365:.\Generated_Source\PSoC5/CsBtns_PWM.c ****                                                  CsBtns_PWM_CTRL_CMPMODE2_MASK;
 366:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         #else
 367:.\Generated_Source\PSoC5/CsBtns_PWM.c ****             uint8 comparemodemasked = comparemode & CsBtns_PWM_CTRL_CMPMODE2_MASK;
 368:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         #endif /* (0 != CsBtns_PWM_CTRL_CMPMODE2_SHIFT) */
 369:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 370:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         #if (CsBtns_PWM_UseControl)
 371:.\Generated_Source\PSoC5/CsBtns_PWM.c ****             CsBtns_PWM_CONTROL &= ((uint8)(~CsBtns_PWM_CTRL_CMPMODE2_MASK)); /*Clear existing mode 
 372:.\Generated_Source\PSoC5/CsBtns_PWM.c ****             CsBtns_PWM_CONTROL |= comparemodemasked;
 373:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         #endif /* (CsBtns_PWM_UseControl) */
 374:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     }
 375:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     #endif /*CsBtns_PWM_CompareMode2SW */
 376:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 377:.\Generated_Source\PSoC5/CsBtns_PWM.c **** #endif /* UseOneCompareMode */
 378:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 379:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 380:.\Generated_Source\PSoC5/CsBtns_PWM.c **** #if (!CsBtns_PWM_UsingFixedFunction)
 381:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 382:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 383:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     /*******************************************************************************
 384:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     * Function Name: CsBtns_PWM_WriteCounter
 385:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     ********************************************************************************
 386:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *
 387:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     * Summary:
 388:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *  implemented for that currently running period and only that period. This API
 390:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *  PWM implementation.
 392:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *
 393:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     * Parameters:
 394:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *  counter:  The period new period counter value.
 395:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *
 396:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     * Return:
 397:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *  None
 398:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *
 399:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     * Side Effects:
 400:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *
 402:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *******************************************************************************/
 403:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     void CsBtns_PWM_WriteCounter(uint16 counter) \
 404:.\Generated_Source\PSoC5/CsBtns_PWM.c ****                                        
 405:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     {
 406:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         CY_SET_REG16(CsBtns_PWM_COUNTER_LSB_PTR, counter);
 407:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     }
 408:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 409:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 410:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     /*******************************************************************************
 411:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     * Function Name: CsBtns_PWM_ReadCounter
 412:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     ********************************************************************************
 413:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *
 414:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     * Summary:
 415:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *  This function returns the current value of the counter.  It doesn't matter
ARM GAS  C:\Users\Nick\AppData\Local\Temp\ccU8SSpN.s 			page 10


 416:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *  if the counter is enabled or running.
 417:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *
 418:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     * Parameters:
 419:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *  None
 420:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *
 421:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     * Return:
 422:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *  The current value of the counter.
 423:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *
 424:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *******************************************************************************/
 425:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     uint16 CsBtns_PWM_ReadCounter(void) 
 426:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     {
 427:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         /* Force capture by reading Accumulator */
 428:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         /* Must first do a software capture to be able to read the counter */
 429:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:.\Generated_Source\PSoC5/CsBtns_PWM.c ****           (void)CY_GET_REG8(CsBtns_PWM_COUNTERCAP_LSB_PTR_8BIT);
 431:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 432:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         /* Read the data from the FIFO */
 433:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         return (CY_GET_REG16(CsBtns_PWM_CAPTURE_LSB_PTR));
 434:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     }
 435:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 436:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     #if (CsBtns_PWM_UseStatus)
 437:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 438:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 439:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         /*******************************************************************************
 440:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         * Function Name: CsBtns_PWM_ClearFIFO
 441:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         ********************************************************************************
 442:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         *
 443:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         * Summary:
 444:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         *  This function clears all capture data from the capture FIFO
 445:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         *
 446:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         * Parameters:
 447:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         *  None
 448:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         *
 449:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         * Return:
 450:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         *  None
 451:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         *
 452:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         *******************************************************************************/
 453:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         void CsBtns_PWM_ClearFIFO(void) 
 454:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         {
 455:.\Generated_Source\PSoC5/CsBtns_PWM.c ****             while(0u != (CsBtns_PWM_ReadStatusRegister() & CsBtns_PWM_STATUS_FIFONEMPTY))
 456:.\Generated_Source\PSoC5/CsBtns_PWM.c ****             {
 457:.\Generated_Source\PSoC5/CsBtns_PWM.c ****                 (void)CsBtns_PWM_ReadCapture();
 458:.\Generated_Source\PSoC5/CsBtns_PWM.c ****             }
 459:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         }
 460:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 461:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     #endif /* CsBtns_PWM_UseStatus */
 462:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 463:.\Generated_Source\PSoC5/CsBtns_PWM.c **** #endif /* !CsBtns_PWM_UsingFixedFunction */
 464:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 465:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 466:.\Generated_Source\PSoC5/CsBtns_PWM.c **** /*******************************************************************************
 467:.\Generated_Source\PSoC5/CsBtns_PWM.c **** * Function Name: CsBtns_PWM_WritePeriod
 468:.\Generated_Source\PSoC5/CsBtns_PWM.c **** ********************************************************************************
 469:.\Generated_Source\PSoC5/CsBtns_PWM.c **** *
 470:.\Generated_Source\PSoC5/CsBtns_PWM.c **** * Summary:
 471:.\Generated_Source\PSoC5/CsBtns_PWM.c **** *  This function is used to change the period of the counter.  The new period
 472:.\Generated_Source\PSoC5/CsBtns_PWM.c **** *  will be loaded the next time terminal count is detected.
ARM GAS  C:\Users\Nick\AppData\Local\Temp\ccU8SSpN.s 			page 11


 473:.\Generated_Source\PSoC5/CsBtns_PWM.c **** *
 474:.\Generated_Source\PSoC5/CsBtns_PWM.c **** * Parameters:
 475:.\Generated_Source\PSoC5/CsBtns_PWM.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:.\Generated_Source\PSoC5/CsBtns_PWM.c **** *           will result in the counter remaining at zero.
 477:.\Generated_Source\PSoC5/CsBtns_PWM.c **** *
 478:.\Generated_Source\PSoC5/CsBtns_PWM.c **** * Return:
 479:.\Generated_Source\PSoC5/CsBtns_PWM.c **** *  None
 480:.\Generated_Source\PSoC5/CsBtns_PWM.c **** *
 481:.\Generated_Source\PSoC5/CsBtns_PWM.c **** *******************************************************************************/
 482:.\Generated_Source\PSoC5/CsBtns_PWM.c **** void CsBtns_PWM_WritePeriod(uint16 period) 
 483:.\Generated_Source\PSoC5/CsBtns_PWM.c **** {
  99              		.loc 1 483 0
 100              		.cfi_startproc
 101              		@ args = 0, pretend = 0, frame = 0
 102              		@ frame_needed = 0, uses_anonymous_args = 0
 103              		@ link register save eliminated.
 104              	.LVL0:
 484:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     #if(CsBtns_PWM_UsingFixedFunction)
 485:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         CY_SET_REG16(CsBtns_PWM_PERIOD_LSB_PTR, (uint16)period);
 105              		.loc 1 485 0
 106 0000 014B     		ldr	r3, .L8
 107 0002 1880     		strh	r0, [r3]	@ movhi
 108 0004 7047     		bx	lr
 109              	.L9:
 110 0006 00BF     		.align	2
 111              	.L8:
 112 0008 044F0040 		.word	1073762052
 113              		.cfi_endproc
 114              	.LFE4:
 115              		.size	CsBtns_PWM_WritePeriod, .-CsBtns_PWM_WritePeriod
 116              		.section	.text.CsBtns_PWM_WriteCompare,"ax",%progbits
 117              		.align	2
 118              		.global	CsBtns_PWM_WriteCompare
 119              		.thumb
 120              		.thumb_func
 121              		.type	CsBtns_PWM_WriteCompare, %function
 122              	CsBtns_PWM_WriteCompare:
 123              	.LFB5:
 486:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     #else
 487:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         CY_SET_REG16(CsBtns_PWM_PERIOD_LSB_PTR, period);
 488:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     #endif /* (CsBtns_PWM_UsingFixedFunction) */
 489:.\Generated_Source\PSoC5/CsBtns_PWM.c **** }
 490:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 491:.\Generated_Source\PSoC5/CsBtns_PWM.c **** #if (CsBtns_PWM_UseOneCompareMode)
 492:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 493:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 494:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     /*******************************************************************************
 495:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     * Function Name: CsBtns_PWM_WriteCompare
 496:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     ********************************************************************************
 497:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *
 498:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     * Summary:
 499:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *  The compare output will be driven high when the present counter value is
 502:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *  compared to the compare value based on the compare mode defined in
 503:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *  Dither Mode.
 504:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *
ARM GAS  C:\Users\Nick\AppData\Local\Temp\ccU8SSpN.s 			page 12


 505:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     * Parameters:
 506:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *  compare:  New compare value.
 507:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *
 508:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     * Return:
 509:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *  None
 510:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *
 511:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     * Side Effects:
 512:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *  This function is only available if the PWM mode parameter is set to
 513:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *
 515:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *******************************************************************************/
 516:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     void CsBtns_PWM_WriteCompare(uint16 compare) \
 517:.\Generated_Source\PSoC5/CsBtns_PWM.c ****                                        
 518:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     {
 124              		.loc 1 518 0
 125              		.cfi_startproc
 126              		@ args = 0, pretend = 0, frame = 0
 127              		@ frame_needed = 0, uses_anonymous_args = 0
 128              		@ link register save eliminated.
 129              	.LVL1:
 519:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         #if(CsBtns_PWM_UsingFixedFunction)
 520:.\Generated_Source\PSoC5/CsBtns_PWM.c ****             CY_SET_REG16(CsBtns_PWM_COMPARE1_LSB_PTR, (uint16)compare);
 130              		.loc 1 520 0
 131 0000 014B     		ldr	r3, .L11
 132 0002 1880     		strh	r0, [r3]	@ movhi
 133 0004 7047     		bx	lr
 134              	.L12:
 135 0006 00BF     		.align	2
 136              	.L11:
 137 0008 064F0040 		.word	1073762054
 138              		.cfi_endproc
 139              	.LFE5:
 140              		.size	CsBtns_PWM_WriteCompare, .-CsBtns_PWM_WriteCompare
 141              		.section	.text.CsBtns_PWM_SetInterruptMode,"ax",%progbits
 142              		.align	2
 143              		.global	CsBtns_PWM_SetInterruptMode
 144              		.thumb
 145              		.thumb_func
 146              		.type	CsBtns_PWM_SetInterruptMode, %function
 147              	CsBtns_PWM_SetInterruptMode:
 148              	.LFB6:
 521:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         #else
 522:.\Generated_Source\PSoC5/CsBtns_PWM.c ****             CY_SET_REG16(CsBtns_PWM_COMPARE1_LSB_PTR, compare);
 523:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         #endif /* (CsBtns_PWM_UsingFixedFunction) */
 524:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 525:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         #if (CsBtns_PWM_PWMMode == CsBtns_PWM__B_PWM__DITHER)
 526:.\Generated_Source\PSoC5/CsBtns_PWM.c ****             #if(CsBtns_PWM_UsingFixedFunction)
 527:.\Generated_Source\PSoC5/CsBtns_PWM.c ****                 CY_SET_REG16(CsBtns_PWM_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:.\Generated_Source\PSoC5/CsBtns_PWM.c ****             #else
 529:.\Generated_Source\PSoC5/CsBtns_PWM.c ****                 CY_SET_REG16(CsBtns_PWM_COMPARE2_LSB_PTR, (compare + 1u));
 530:.\Generated_Source\PSoC5/CsBtns_PWM.c ****             #endif /* (CsBtns_PWM_UsingFixedFunction) */
 531:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         #endif /* (CsBtns_PWM_PWMMode == CsBtns_PWM__B_PWM__DITHER) */
 532:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     }
 533:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 534:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 535:.\Generated_Source\PSoC5/CsBtns_PWM.c **** #else
 536:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
ARM GAS  C:\Users\Nick\AppData\Local\Temp\ccU8SSpN.s 			page 13


 537:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 538:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     /*******************************************************************************
 539:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     * Function Name: CsBtns_PWM_WriteCompare1
 540:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     ********************************************************************************
 541:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *
 542:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     * Summary:
 543:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *  driven high when the present counter value is less than or less than or
 546:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *  equal to the compare register, depending on the mode.
 547:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *
 548:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     * Parameters:
 549:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *  compare:  New compare value.
 550:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *
 551:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     * Return:
 552:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *  None
 553:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *
 554:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *******************************************************************************/
 555:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     void CsBtns_PWM_WriteCompare1(uint16 compare) \
 556:.\Generated_Source\PSoC5/CsBtns_PWM.c ****                                         
 557:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     {
 558:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         #if(CsBtns_PWM_UsingFixedFunction)
 559:.\Generated_Source\PSoC5/CsBtns_PWM.c ****             CY_SET_REG16(CsBtns_PWM_COMPARE1_LSB_PTR, (uint16)compare);
 560:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         #else
 561:.\Generated_Source\PSoC5/CsBtns_PWM.c ****             CY_SET_REG16(CsBtns_PWM_COMPARE1_LSB_PTR, compare);
 562:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         #endif /* (CsBtns_PWM_UsingFixedFunction) */
 563:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     }
 564:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 565:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 566:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     /*******************************************************************************
 567:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     * Function Name: CsBtns_PWM_WriteCompare2
 568:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     ********************************************************************************
 569:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *
 570:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     * Summary:
 571:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *  The compare output will be driven high when the present counter value is
 574:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *  less than or less than or equal to the compare register, depending on the
 575:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *  mode.
 576:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *
 577:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     * Parameters:
 578:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *  compare:  New compare value.
 579:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *
 580:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     * Return:
 581:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *  None
 582:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *
 583:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *******************************************************************************/
 584:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     void CsBtns_PWM_WriteCompare2(uint16 compare) \
 585:.\Generated_Source\PSoC5/CsBtns_PWM.c ****                                         
 586:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     {
 587:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         #if(CsBtns_PWM_UsingFixedFunction)
 588:.\Generated_Source\PSoC5/CsBtns_PWM.c ****             CY_SET_REG16(CsBtns_PWM_COMPARE2_LSB_PTR, compare);
 589:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         #else
 590:.\Generated_Source\PSoC5/CsBtns_PWM.c ****             CY_SET_REG16(CsBtns_PWM_COMPARE2_LSB_PTR, compare);
 591:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         #endif /* (CsBtns_PWM_UsingFixedFunction) */
 592:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     }
 593:.\Generated_Source\PSoC5/CsBtns_PWM.c **** #endif /* UseOneCompareMode */
ARM GAS  C:\Users\Nick\AppData\Local\Temp\ccU8SSpN.s 			page 14


 594:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 595:.\Generated_Source\PSoC5/CsBtns_PWM.c **** #if (CsBtns_PWM_DeadBandUsed)
 596:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 597:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 598:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     /*******************************************************************************
 599:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     * Function Name: CsBtns_PWM_WriteDeadTime
 600:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     ********************************************************************************
 601:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *
 602:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     * Summary:
 603:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *  This function writes the dead-band counts to the corresponding register
 604:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *
 605:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     * Parameters:
 606:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *  deadtime:  Number of counts for dead time
 607:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *
 608:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     * Return:
 609:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *  None
 610:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *
 611:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *******************************************************************************/
 612:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     void CsBtns_PWM_WriteDeadTime(uint8 deadtime) 
 613:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     {
 614:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         #if(!CsBtns_PWM_DeadBand2_4)
 616:.\Generated_Source\PSoC5/CsBtns_PWM.c ****             CY_SET_REG8(CsBtns_PWM_DEADBAND_COUNT_PTR, deadtime);
 617:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         #else
 618:.\Generated_Source\PSoC5/CsBtns_PWM.c ****             /* Otherwise the data has to be masked and offset */
 619:.\Generated_Source\PSoC5/CsBtns_PWM.c ****             /* Clear existing data */
 620:.\Generated_Source\PSoC5/CsBtns_PWM.c ****             CsBtns_PWM_DEADBAND_COUNT &= ((uint8)(~CsBtns_PWM_DEADBAND_COUNT_MASK));
 621:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 622:.\Generated_Source\PSoC5/CsBtns_PWM.c ****             /* Set new dead time */
 623:.\Generated_Source\PSoC5/CsBtns_PWM.c ****             #if(CsBtns_PWM_DEADBAND_COUNT_SHIFT)
 624:.\Generated_Source\PSoC5/CsBtns_PWM.c ****                 CsBtns_PWM_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << CsBtns_PWM_DEADBAND_COUNT_
 625:.\Generated_Source\PSoC5/CsBtns_PWM.c ****                                                     CsBtns_PWM_DEADBAND_COUNT_MASK;
 626:.\Generated_Source\PSoC5/CsBtns_PWM.c ****             #else
 627:.\Generated_Source\PSoC5/CsBtns_PWM.c ****                 CsBtns_PWM_DEADBAND_COUNT |= deadtime & CsBtns_PWM_DEADBAND_COUNT_MASK;
 628:.\Generated_Source\PSoC5/CsBtns_PWM.c ****             #endif /* (CsBtns_PWM_DEADBAND_COUNT_SHIFT) */
 629:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 630:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         #endif /* (!CsBtns_PWM_DeadBand2_4) */
 631:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     }
 632:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 633:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 634:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     /*******************************************************************************
 635:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     * Function Name: CsBtns_PWM_ReadDeadTime
 636:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     ********************************************************************************
 637:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *
 638:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     * Summary:
 639:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *  This function reads the dead-band counts from the corresponding register
 640:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *
 641:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     * Parameters:
 642:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *  None
 643:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *
 644:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     * Return:
 645:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *  Dead Band Counts
 646:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *
 647:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *******************************************************************************/
 648:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     uint8 CsBtns_PWM_ReadDeadTime(void) 
 649:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     {
 650:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         /* If using the Dead Band 1-255 mode then just read the register */
ARM GAS  C:\Users\Nick\AppData\Local\Temp\ccU8SSpN.s 			page 15


 651:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         #if(!CsBtns_PWM_DeadBand2_4)
 652:.\Generated_Source\PSoC5/CsBtns_PWM.c ****             return (CY_GET_REG8(CsBtns_PWM_DEADBAND_COUNT_PTR));
 653:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         #else
 654:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 655:.\Generated_Source\PSoC5/CsBtns_PWM.c ****             /* Otherwise the data has to be masked and offset */
 656:.\Generated_Source\PSoC5/CsBtns_PWM.c ****             #if(CsBtns_PWM_DEADBAND_COUNT_SHIFT)
 657:.\Generated_Source\PSoC5/CsBtns_PWM.c ****                 return ((uint8)(((uint8)(CsBtns_PWM_DEADBAND_COUNT & CsBtns_PWM_DEADBAND_COUNT_MASK
 658:.\Generated_Source\PSoC5/CsBtns_PWM.c ****                                                                            CsBtns_PWM_DEADBAND_COUN
 659:.\Generated_Source\PSoC5/CsBtns_PWM.c ****             #else
 660:.\Generated_Source\PSoC5/CsBtns_PWM.c ****                 return (CsBtns_PWM_DEADBAND_COUNT & CsBtns_PWM_DEADBAND_COUNT_MASK);
 661:.\Generated_Source\PSoC5/CsBtns_PWM.c ****             #endif /* (CsBtns_PWM_DEADBAND_COUNT_SHIFT) */
 662:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         #endif /* (!CsBtns_PWM_DeadBand2_4) */
 663:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     }
 664:.\Generated_Source\PSoC5/CsBtns_PWM.c **** #endif /* DeadBandUsed */
 665:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 666:.\Generated_Source\PSoC5/CsBtns_PWM.c **** #if (CsBtns_PWM_UseStatus || CsBtns_PWM_UsingFixedFunction)
 667:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 668:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 669:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     /*******************************************************************************
 670:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     * Function Name: CsBtns_PWM_SetInterruptMode
 671:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     ********************************************************************************
 672:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *
 673:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     * Summary:
 674:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *  source status register.
 676:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *
 677:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     * Parameters:
 678:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
 679:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *
 680:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     * Return:
 681:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *  None
 682:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *
 683:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *******************************************************************************/
 684:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     void CsBtns_PWM_SetInterruptMode(uint8 interruptMode) 
 685:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     {
 149              		.loc 1 685 0
 150              		.cfi_startproc
 151              		@ args = 0, pretend = 0, frame = 0
 152              		@ frame_needed = 0, uses_anonymous_args = 0
 153              		@ link register save eliminated.
 154              	.LVL2:
 686:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         CY_SET_REG8(CsBtns_PWM_STATUS_MASK_PTR, interruptMode);
 155              		.loc 1 686 0
 156 0000 014B     		ldr	r3, .L14
 157 0002 1870     		strb	r0, [r3]
 158 0004 7047     		bx	lr
 159              	.L15:
 160 0006 00BF     		.align	2
 161              	.L14:
 162 0008 034F0040 		.word	1073762051
 163              		.cfi_endproc
 164              	.LFE6:
 165              		.size	CsBtns_PWM_SetInterruptMode, .-CsBtns_PWM_SetInterruptMode
 166              		.section	.text.CsBtns_PWM_Init,"ax",%progbits
 167              		.align	2
 168              		.global	CsBtns_PWM_Init
 169              		.thumb
ARM GAS  C:\Users\Nick\AppData\Local\Temp\ccU8SSpN.s 			page 16


 170              		.thumb_func
 171              		.type	CsBtns_PWM_Init, %function
 172              	CsBtns_PWM_Init:
 173              	.LFB1:
  85:.\Generated_Source\PSoC5/CsBtns_PWM.c **** {
 174              		.loc 1 85 0
 175              		.cfi_startproc
 176              		@ args = 0, pretend = 0, frame = 0
 177              		@ frame_needed = 0, uses_anonymous_args = 0
 178 0000 08B5     		push	{r3, lr}
 179              		.cfi_def_cfa_offset 8
 180              		.cfi_offset 3, -8
 181              		.cfi_offset 14, -4
  99:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         CsBtns_PWM_CONTROL |= CsBtns_PWM_CFG0_MODE;
 182              		.loc 1 99 0
 183 0002 194B     		ldr	r3, .L17
 184 0004 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 185 0006 42F00202 		orr	r2, r2, #2
 186 000a 1A70     		strb	r2, [r3]
 104:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         ctrl = CsBtns_PWM_CONTROL3 & ((uint8 )(~CsBtns_PWM_CTRL_CMPMODE1_MASK));
 187              		.loc 1 104 0
 188 000c 0233     		adds	r3, r3, #2
 189 000e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 190 0010 02F08F02 		and	r2, r2, #143
 191              	.LVL3:
 105:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         CsBtns_PWM_CONTROL3 = ctrl | CsBtns_PWM_DEFAULT_COMPARE1_MODE;
 192              		.loc 1 105 0
 193 0014 42F03002 		orr	r2, r2, #48
 194              	.LVL4:
 195 0018 1A70     		strb	r2, [r3]
 108:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         CsBtns_PWM_RT1 &= ((uint8)(~CsBtns_PWM_RT1_MASK));
 196              		.loc 1 108 0
 197 001a 0933     		adds	r3, r3, #9
 198 001c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 199 001e 02F0CF02 		and	r2, r2, #207
 200 0022 1A70     		strb	r2, [r3]
 109:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         CsBtns_PWM_RT1 |= CsBtns_PWM_SYNC;
 201              		.loc 1 109 0
 202 0024 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 203 0026 42F03002 		orr	r2, r2, #48
 204 002a 1A70     		strb	r2, [r3]
 112:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         CsBtns_PWM_RT1 &= ((uint8)(~CsBtns_PWM_SYNCDSI_MASK));
 205              		.loc 1 112 0
 206 002c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 207 002e 02F0F002 		and	r2, r2, #240
 208 0032 1A70     		strb	r2, [r3]
 113:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         CsBtns_PWM_RT1 |= CsBtns_PWM_SYNCDSI_EN;
 209              		.loc 1 113 0
 210 0034 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 211 0036 42F00F02 		orr	r2, r2, #15
 212 003a 1A70     		strb	r2, [r3]
 136:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     CsBtns_PWM_WritePeriod(CsBtns_PWM_INIT_PERIOD_VALUE);
 213              		.loc 1 136 0
 214 003c 4FF6FF70 		movw	r0, #65535
 215 0040 FFF7FEFF 		bl	CsBtns_PWM_WritePeriod
 216              	.LVL5:
 139:.\Generated_Source\PSoC5/CsBtns_PWM.c ****             CsBtns_PWM_WriteCompare(CsBtns_PWM_INIT_COMPARE_VALUE1);
ARM GAS  C:\Users\Nick\AppData\Local\Temp\ccU8SSpN.s 			page 17


 217              		.loc 1 139 0
 218 0044 0120     		movs	r0, #1
 219 0046 FFF7FEFF 		bl	CsBtns_PWM_WriteCompare
 220              	.LVL6:
 154:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         CsBtns_PWM_SetInterruptMode(CsBtns_PWM_INIT_INTERRUPTS_MODE);
 221              		.loc 1 154 0
 222 004a 0020     		movs	r0, #0
 223 004c FFF7FEFF 		bl	CsBtns_PWM_SetInterruptMode
 224              	.LVL7:
 159:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         CsBtns_PWM_GLOBAL_ENABLE |= CsBtns_PWM_BLOCK_EN_MASK;
 225              		.loc 1 159 0
 226 0050 064B     		ldr	r3, .L17+4
 227 0052 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 228 0054 42F00102 		orr	r2, r2, #1
 229 0058 1A70     		strb	r2, [r3]
 161:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         CsBtns_PWM_CONTROL2 |= CsBtns_PWM_CTRL2_IRQ_SEL;
 230              		.loc 1 161 0
 231 005a 03F65E33 		addw	r3, r3, #2910
 232 005e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 233 0060 42F00102 		orr	r2, r2, #1
 234 0064 1A70     		strb	r2, [r3]
 235 0066 08BD     		pop	{r3, pc}
 236              	.L18:
 237              		.align	2
 238              	.L17:
 239 0068 004F0040 		.word	1073762048
 240 006c A3430040 		.word	1073759139
 241              		.cfi_endproc
 242              	.LFE1:
 243              		.size	CsBtns_PWM_Init, .-CsBtns_PWM_Init
 244              		.section	.text.CsBtns_PWM_Start,"ax",%progbits
 245              		.align	2
 246              		.global	CsBtns_PWM_Start
 247              		.thumb
 248              		.thumb_func
 249              		.type	CsBtns_PWM_Start, %function
 250              	CsBtns_PWM_Start:
 251              	.LFB0:
  56:.\Generated_Source\PSoC5/CsBtns_PWM.c **** {
 252              		.loc 1 56 0
 253              		.cfi_startproc
 254              		@ args = 0, pretend = 0, frame = 0
 255              		@ frame_needed = 0, uses_anonymous_args = 0
 256 0000 08B5     		push	{r3, lr}
 257              		.cfi_def_cfa_offset 8
 258              		.cfi_offset 3, -8
 259              		.cfi_offset 14, -4
  58:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     if(CsBtns_PWM_initVar == 0u)
 260              		.loc 1 58 0
 261 0002 054B     		ldr	r3, .L21
 262 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 263 0006 23B9     		cbnz	r3, .L20
  60:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         CsBtns_PWM_Init();
 264              		.loc 1 60 0
 265 0008 FFF7FEFF 		bl	CsBtns_PWM_Init
 266              	.LVL8:
  61:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         CsBtns_PWM_initVar = 1u;
ARM GAS  C:\Users\Nick\AppData\Local\Temp\ccU8SSpN.s 			page 18


 267              		.loc 1 61 0
 268 000c 0122     		movs	r2, #1
 269 000e 024B     		ldr	r3, .L21
 270 0010 1A70     		strb	r2, [r3]
 271              	.L20:
  63:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     CsBtns_PWM_Enable();
 272              		.loc 1 63 0
 273 0012 FFF7FEFF 		bl	CsBtns_PWM_Enable
 274              	.LVL9:
 275 0016 08BD     		pop	{r3, pc}
 276              	.L22:
 277              		.align	2
 278              	.L21:
 279 0018 00000000 		.word	.LANCHOR0
 280              		.cfi_endproc
 281              	.LFE0:
 282              		.size	CsBtns_PWM_Start, .-CsBtns_PWM_Start
 283              		.section	.text.CsBtns_PWM_ReadStatusRegister,"ax",%progbits
 284              		.align	2
 285              		.global	CsBtns_PWM_ReadStatusRegister
 286              		.thumb
 287              		.thumb_func
 288              		.type	CsBtns_PWM_ReadStatusRegister, %function
 289              	CsBtns_PWM_ReadStatusRegister:
 290              	.LFB7:
 687:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     }
 688:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 689:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 690:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     /*******************************************************************************
 691:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     * Function Name: CsBtns_PWM_ReadStatusRegister
 692:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     ********************************************************************************
 693:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *
 694:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     * Summary:
 695:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *  This function returns the current state of the status register.
 696:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *
 697:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     * Parameters:
 698:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *  None
 699:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *
 700:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     * Return:
 701:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *  uint8 : Current status register value. The status register bits are:
 702:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *  [7:6] : Unused(0)
 703:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *  [5]   : Kill event output
 704:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *  [4]   : FIFO not empty
 705:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *  [3]   : FIFO full
 706:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *  [2]   : Terminal count
 707:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *  [1]   : Compare output 2
 708:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *  [0]   : Compare output 1
 709:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *
 710:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *******************************************************************************/
 711:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     uint8 CsBtns_PWM_ReadStatusRegister(void) 
 712:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     {
 291              		.loc 1 712 0
 292              		.cfi_startproc
 293              		@ args = 0, pretend = 0, frame = 0
 294              		@ frame_needed = 0, uses_anonymous_args = 0
 295              		@ link register save eliminated.
 713:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         return (CY_GET_REG8(CsBtns_PWM_STATUS_PTR));
ARM GAS  C:\Users\Nick\AppData\Local\Temp\ccU8SSpN.s 			page 19


 296              		.loc 1 713 0
 297 0000 014B     		ldr	r3, .L24
 298 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 714:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     }
 299              		.loc 1 714 0
 300 0004 7047     		bx	lr
 301              	.L25:
 302 0006 00BF     		.align	2
 303              	.L24:
 304 0008 034F0040 		.word	1073762051
 305              		.cfi_endproc
 306              	.LFE7:
 307              		.size	CsBtns_PWM_ReadStatusRegister, .-CsBtns_PWM_ReadStatusRegister
 308              		.section	.text.CsBtns_PWM_ReadControlRegister,"ax",%progbits
 309              		.align	2
 310              		.global	CsBtns_PWM_ReadControlRegister
 311              		.thumb
 312              		.thumb_func
 313              		.type	CsBtns_PWM_ReadControlRegister, %function
 314              	CsBtns_PWM_ReadControlRegister:
 315              	.LFB8:
 715:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 716:.\Generated_Source\PSoC5/CsBtns_PWM.c **** #endif /* (CsBtns_PWM_UseStatus || CsBtns_PWM_UsingFixedFunction) */
 717:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 718:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 719:.\Generated_Source\PSoC5/CsBtns_PWM.c **** #if (CsBtns_PWM_UseControl)
 720:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 721:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 722:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     /*******************************************************************************
 723:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     * Function Name: CsBtns_PWM_ReadControlRegister
 724:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     ********************************************************************************
 725:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *
 726:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     * Summary:
 727:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *  Returns the current state of the control register. This API is available
 728:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *  only if the control register is not removed.
 729:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *
 730:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     * Parameters:
 731:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *  None
 732:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *
 733:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     * Return:
 734:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *  uint8 : Current control register value
 735:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *
 736:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *******************************************************************************/
 737:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     uint8 CsBtns_PWM_ReadControlRegister(void) 
 738:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     {
 316              		.loc 1 738 0
 317              		.cfi_startproc
 318              		@ args = 0, pretend = 0, frame = 0
 319              		@ frame_needed = 0, uses_anonymous_args = 0
 320              		@ link register save eliminated.
 739:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         uint8 result;
 740:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 741:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         result = CY_GET_REG8(CsBtns_PWM_CONTROL_PTR);
 321              		.loc 1 741 0
 322 0000 014B     		ldr	r3, .L27
 323 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 324              	.LVL10:
ARM GAS  C:\Users\Nick\AppData\Local\Temp\ccU8SSpN.s 			page 20


 742:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         return (result);
 743:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     }
 325              		.loc 1 743 0
 326 0004 7047     		bx	lr
 327              	.L28:
 328 0006 00BF     		.align	2
 329              	.L27:
 330 0008 004F0040 		.word	1073762048
 331              		.cfi_endproc
 332              	.LFE8:
 333              		.size	CsBtns_PWM_ReadControlRegister, .-CsBtns_PWM_ReadControlRegister
 334              		.section	.text.CsBtns_PWM_WriteControlRegister,"ax",%progbits
 335              		.align	2
 336              		.global	CsBtns_PWM_WriteControlRegister
 337              		.thumb
 338              		.thumb_func
 339              		.type	CsBtns_PWM_WriteControlRegister, %function
 340              	CsBtns_PWM_WriteControlRegister:
 341              	.LFB9:
 744:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 745:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 746:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     /*******************************************************************************
 747:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     * Function Name: CsBtns_PWM_WriteControlRegister
 748:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     ********************************************************************************
 749:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *
 750:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     * Summary:
 751:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *  Sets the bit field of the control register. This API is available only if
 752:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *  the control register is not removed.
 753:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *
 754:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     * Parameters:
 755:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *  [7]   : PWM Enable
 757:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *  [6]   : Reset
 758:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *  [5:3] : Compare Mode2
 759:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *  [2:0] : Compare Mode2
 760:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *
 761:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     * Return:
 762:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *  None
 763:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *
 764:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *******************************************************************************/
 765:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     void CsBtns_PWM_WriteControlRegister(uint8 control) 
 766:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     {
 342              		.loc 1 766 0
 343              		.cfi_startproc
 344              		@ args = 0, pretend = 0, frame = 0
 345              		@ frame_needed = 0, uses_anonymous_args = 0
 346              		@ link register save eliminated.
 347              	.LVL11:
 767:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         CY_SET_REG8(CsBtns_PWM_CONTROL_PTR, control);
 348              		.loc 1 767 0
 349 0000 014B     		ldr	r3, .L30
 350 0002 1870     		strb	r0, [r3]
 351 0004 7047     		bx	lr
 352              	.L31:
 353 0006 00BF     		.align	2
 354              	.L30:
 355 0008 004F0040 		.word	1073762048
ARM GAS  C:\Users\Nick\AppData\Local\Temp\ccU8SSpN.s 			page 21


 356              		.cfi_endproc
 357              	.LFE9:
 358              		.size	CsBtns_PWM_WriteControlRegister, .-CsBtns_PWM_WriteControlRegister
 359              		.section	.text.CsBtns_PWM_ReadCompare,"ax",%progbits
 360              		.align	2
 361              		.global	CsBtns_PWM_ReadCompare
 362              		.thumb
 363              		.thumb_func
 364              		.type	CsBtns_PWM_ReadCompare, %function
 365              	CsBtns_PWM_ReadCompare:
 366              	.LFB10:
 768:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     }
 769:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 770:.\Generated_Source\PSoC5/CsBtns_PWM.c **** #endif /* (CsBtns_PWM_UseControl) */
 771:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 772:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 773:.\Generated_Source\PSoC5/CsBtns_PWM.c **** #if (!CsBtns_PWM_UsingFixedFunction)
 774:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 775:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 776:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     /*******************************************************************************
 777:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     * Function Name: CsBtns_PWM_ReadCapture
 778:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     ********************************************************************************
 779:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *
 780:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     * Summary:
 781:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *  Reads the capture value from the capture FIFO.
 782:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *
 783:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     * Parameters:
 784:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *  None
 785:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *
 786:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     * Return:
 787:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *  uint8/uint16: The current capture value
 788:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *
 789:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *******************************************************************************/
 790:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     uint16 CsBtns_PWM_ReadCapture(void) 
 791:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     {
 792:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         return (CY_GET_REG16(CsBtns_PWM_CAPTURE_LSB_PTR));
 793:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     }
 794:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 795:.\Generated_Source\PSoC5/CsBtns_PWM.c **** #endif /* (!CsBtns_PWM_UsingFixedFunction) */
 796:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 797:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 798:.\Generated_Source\PSoC5/CsBtns_PWM.c **** #if (CsBtns_PWM_UseOneCompareMode)
 799:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 800:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 801:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     /*******************************************************************************
 802:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     * Function Name: CsBtns_PWM_ReadCompare
 803:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     ********************************************************************************
 804:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *
 805:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     * Summary:
 806:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *
 809:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     * Parameters:
 810:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *  None
 811:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *
 812:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     * Return:
 813:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *  uint8/uint16: Current compare value
ARM GAS  C:\Users\Nick\AppData\Local\Temp\ccU8SSpN.s 			page 22


 814:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *
 815:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *******************************************************************************/
 816:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     uint16 CsBtns_PWM_ReadCompare(void) 
 817:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     {
 367              		.loc 1 817 0
 368              		.cfi_startproc
 369              		@ args = 0, pretend = 0, frame = 0
 370              		@ frame_needed = 0, uses_anonymous_args = 0
 371              		@ link register save eliminated.
 818:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         #if(CsBtns_PWM_UsingFixedFunction)
 819:.\Generated_Source\PSoC5/CsBtns_PWM.c ****             return ((uint16)CY_GET_REG16(CsBtns_PWM_COMPARE1_LSB_PTR));
 372              		.loc 1 819 0
 373 0000 014B     		ldr	r3, .L33
 374 0002 1888     		ldrh	r0, [r3]
 820:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         #else
 821:.\Generated_Source\PSoC5/CsBtns_PWM.c ****             return (CY_GET_REG16(CsBtns_PWM_COMPARE1_LSB_PTR));
 822:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         #endif /* (CsBtns_PWM_UsingFixedFunction) */
 823:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     }
 375              		.loc 1 823 0
 376 0004 80B2     		uxth	r0, r0
 377 0006 7047     		bx	lr
 378              	.L34:
 379              		.align	2
 380              	.L33:
 381 0008 064F0040 		.word	1073762054
 382              		.cfi_endproc
 383              	.LFE10:
 384              		.size	CsBtns_PWM_ReadCompare, .-CsBtns_PWM_ReadCompare
 385              		.section	.text.CsBtns_PWM_ReadPeriod,"ax",%progbits
 386              		.align	2
 387              		.global	CsBtns_PWM_ReadPeriod
 388              		.thumb
 389              		.thumb_func
 390              		.type	CsBtns_PWM_ReadPeriod, %function
 391              	CsBtns_PWM_ReadPeriod:
 392              	.LFB11:
 824:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 825:.\Generated_Source\PSoC5/CsBtns_PWM.c **** #else
 826:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 827:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 828:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     /*******************************************************************************
 829:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     * Function Name: CsBtns_PWM_ReadCompare1
 830:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     ********************************************************************************
 831:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *
 832:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     * Summary:
 833:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *  Reads the compare value for the compare1 output.
 834:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *
 835:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     * Parameters:
 836:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *  None
 837:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *
 838:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     * Return:
 839:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *  uint8/uint16: Current compare value.
 840:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *
 841:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *******************************************************************************/
 842:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     uint16 CsBtns_PWM_ReadCompare1(void) 
 843:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     {
 844:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         return (CY_GET_REG16(CsBtns_PWM_COMPARE1_LSB_PTR));
ARM GAS  C:\Users\Nick\AppData\Local\Temp\ccU8SSpN.s 			page 23


 845:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     }
 846:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 847:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 848:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     /*******************************************************************************
 849:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     * Function Name: CsBtns_PWM_ReadCompare2
 850:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     ********************************************************************************
 851:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *
 852:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     * Summary:
 853:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *  Reads the compare value for the compare2 output.
 854:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *
 855:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     * Parameters:
 856:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *  None
 857:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *
 858:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     * Return:
 859:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *  uint8/uint16: Current compare value.
 860:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *
 861:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     *******************************************************************************/
 862:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     uint16 CsBtns_PWM_ReadCompare2(void) 
 863:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     {
 864:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         return (CY_GET_REG16(CsBtns_PWM_COMPARE2_LSB_PTR));
 865:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     }
 866:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 867:.\Generated_Source\PSoC5/CsBtns_PWM.c **** #endif /* (CsBtns_PWM_UseOneCompareMode) */
 868:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 869:.\Generated_Source\PSoC5/CsBtns_PWM.c **** 
 870:.\Generated_Source\PSoC5/CsBtns_PWM.c **** /*******************************************************************************
 871:.\Generated_Source\PSoC5/CsBtns_PWM.c **** * Function Name: CsBtns_PWM_ReadPeriod
 872:.\Generated_Source\PSoC5/CsBtns_PWM.c **** ********************************************************************************
 873:.\Generated_Source\PSoC5/CsBtns_PWM.c **** *
 874:.\Generated_Source\PSoC5/CsBtns_PWM.c **** * Summary:
 875:.\Generated_Source\PSoC5/CsBtns_PWM.c **** *  Reads the period value used by the PWM hardware.
 876:.\Generated_Source\PSoC5/CsBtns_PWM.c **** *
 877:.\Generated_Source\PSoC5/CsBtns_PWM.c **** * Parameters:
 878:.\Generated_Source\PSoC5/CsBtns_PWM.c **** *  None
 879:.\Generated_Source\PSoC5/CsBtns_PWM.c **** *
 880:.\Generated_Source\PSoC5/CsBtns_PWM.c **** * Return:
 881:.\Generated_Source\PSoC5/CsBtns_PWM.c **** *  uint8/16: Period value
 882:.\Generated_Source\PSoC5/CsBtns_PWM.c **** *
 883:.\Generated_Source\PSoC5/CsBtns_PWM.c **** *******************************************************************************/
 884:.\Generated_Source\PSoC5/CsBtns_PWM.c **** uint16 CsBtns_PWM_ReadPeriod(void) 
 885:.\Generated_Source\PSoC5/CsBtns_PWM.c **** {
 393              		.loc 1 885 0
 394              		.cfi_startproc
 395              		@ args = 0, pretend = 0, frame = 0
 396              		@ frame_needed = 0, uses_anonymous_args = 0
 397              		@ link register save eliminated.
 886:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     #if(CsBtns_PWM_UsingFixedFunction)
 887:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         return ((uint16)CY_GET_REG16(CsBtns_PWM_PERIOD_LSB_PTR));
 398              		.loc 1 887 0
 399 0000 014B     		ldr	r3, .L36
 400 0002 1888     		ldrh	r0, [r3]
 888:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     #else
 889:.\Generated_Source\PSoC5/CsBtns_PWM.c ****         return (CY_GET_REG16(CsBtns_PWM_PERIOD_LSB_PTR));
 890:.\Generated_Source\PSoC5/CsBtns_PWM.c ****     #endif /* (CsBtns_PWM_UsingFixedFunction) */
 891:.\Generated_Source\PSoC5/CsBtns_PWM.c **** }
 401              		.loc 1 891 0
 402 0004 80B2     		uxth	r0, r0
ARM GAS  C:\Users\Nick\AppData\Local\Temp\ccU8SSpN.s 			page 24


 403 0006 7047     		bx	lr
 404              	.L37:
 405              		.align	2
 406              	.L36:
 407 0008 044F0040 		.word	1073762052
 408              		.cfi_endproc
 409              	.LFE11:
 410              		.size	CsBtns_PWM_ReadPeriod, .-CsBtns_PWM_ReadPeriod
 411              		.global	CsBtns_PWM_initVar
 412              		.bss
 413              		.set	.LANCHOR0,. + 0
 414              		.type	CsBtns_PWM_initVar, %object
 415              		.size	CsBtns_PWM_initVar, 1
 416              	CsBtns_PWM_initVar:
 417 0000 00       		.space	1
 418              		.text
 419              	.Letext0:
 420              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 421              		.section	.debug_info,"",%progbits
 422              	.Ldebug_info0:
 423 0000 71020000 		.4byte	0x271
 424 0004 0400     		.2byte	0x4
 425 0006 00000000 		.4byte	.Ldebug_abbrev0
 426 000a 04       		.byte	0x4
 427 000b 01       		.uleb128 0x1
 428 000c 7C010000 		.4byte	.LASF34
 429 0010 01       		.byte	0x1
 430 0011 F0000000 		.4byte	.LASF35
 431 0015 B5020000 		.4byte	.LASF36
 432 0019 00000000 		.4byte	.Ldebug_ranges0+0
 433 001d 00000000 		.4byte	0
 434 0021 00000000 		.4byte	.Ldebug_line0
 435 0025 02       		.uleb128 0x2
 436 0026 01       		.byte	0x1
 437 0027 06       		.byte	0x6
 438 0028 A1020000 		.4byte	.LASF0
 439 002c 02       		.uleb128 0x2
 440 002d 01       		.byte	0x1
 441 002e 08       		.byte	0x8
 442 002f 6E000000 		.4byte	.LASF1
 443 0033 02       		.uleb128 0x2
 444 0034 02       		.byte	0x2
 445 0035 05       		.byte	0x5
 446 0036 79020000 		.4byte	.LASF2
 447 003a 02       		.uleb128 0x2
 448 003b 02       		.byte	0x2
 449 003c 07       		.byte	0x7
 450 003d 1F000000 		.4byte	.LASF3
 451 0041 02       		.uleb128 0x2
 452 0042 04       		.byte	0x4
 453 0043 05       		.byte	0x5
 454 0044 83020000 		.4byte	.LASF4
 455 0048 02       		.uleb128 0x2
 456 0049 04       		.byte	0x4
 457 004a 07       		.byte	0x7
 458 004b A9000000 		.4byte	.LASF5
 459 004f 02       		.uleb128 0x2
ARM GAS  C:\Users\Nick\AppData\Local\Temp\ccU8SSpN.s 			page 25


 460 0050 08       		.byte	0x8
 461 0051 05       		.byte	0x5
 462 0052 01020000 		.4byte	.LASF6
 463 0056 02       		.uleb128 0x2
 464 0057 08       		.byte	0x8
 465 0058 07       		.byte	0x7
 466 0059 3A010000 		.4byte	.LASF7
 467 005d 03       		.uleb128 0x3
 468 005e 04       		.byte	0x4
 469 005f 05       		.byte	0x5
 470 0060 696E7400 		.ascii	"int\000"
 471 0064 02       		.uleb128 0x2
 472 0065 04       		.byte	0x4
 473 0066 07       		.byte	0x7
 474 0067 2D010000 		.4byte	.LASF8
 475 006b 04       		.uleb128 0x4
 476 006c DB000000 		.4byte	.LASF9
 477 0070 02       		.byte	0x2
 478 0071 B4       		.byte	0xb4
 479 0072 2C000000 		.4byte	0x2c
 480 0076 04       		.uleb128 0x4
 481 0077 16010000 		.4byte	.LASF10
 482 007b 02       		.byte	0x2
 483 007c B5       		.byte	0xb5
 484 007d 3A000000 		.4byte	0x3a
 485 0081 02       		.uleb128 0x2
 486 0082 04       		.byte	0x4
 487 0083 04       		.byte	0x4
 488 0084 4A000000 		.4byte	.LASF11
 489 0088 02       		.uleb128 0x2
 490 0089 08       		.byte	0x8
 491 008a 04       		.byte	0x4
 492 008b E9000000 		.4byte	.LASF12
 493 008f 02       		.uleb128 0x2
 494 0090 01       		.byte	0x1
 495 0091 08       		.byte	0x8
 496 0092 8C020000 		.4byte	.LASF13
 497 0096 05       		.uleb128 0x5
 498 0097 8D000000 		.4byte	.LASF14
 499 009b 02       		.byte	0x2
 500 009c 5E01     		.2byte	0x15e
 501 009e A2000000 		.4byte	0xa2
 502 00a2 06       		.uleb128 0x6
 503 00a3 6B000000 		.4byte	0x6b
 504 00a7 05       		.uleb128 0x5
 505 00a8 00000000 		.4byte	.LASF15
 506 00ac 02       		.byte	0x2
 507 00ad 5F01     		.2byte	0x15f
 508 00af B3000000 		.4byte	0xb3
 509 00b3 06       		.uleb128 0x6
 510 00b4 76000000 		.4byte	0x76
 511 00b8 02       		.uleb128 0x2
 512 00b9 04       		.byte	0x4
 513 00ba 07       		.byte	0x7
 514 00bb F8010000 		.4byte	.LASF16
 515 00bf 07       		.uleb128 0x7
 516 00c0 06000000 		.4byte	.LASF17
ARM GAS  C:\Users\Nick\AppData\Local\Temp\ccU8SSpN.s 			page 26


 517 00c4 01       		.byte	0x1
 518 00c5 C7       		.byte	0xc7
 519 00c6 00000000 		.4byte	.LFB2
 520 00ca 28000000 		.4byte	.LFE2-.LFB2
 521 00ce 01       		.uleb128 0x1
 522 00cf 9C       		.byte	0x9c
 523 00d0 07       		.uleb128 0x7
 524 00d1 91020000 		.4byte	.LASF18
 525 00d5 01       		.byte	0x1
 526 00d6 E9       		.byte	0xe9
 527 00d7 00000000 		.4byte	.LFB3
 528 00db 28000000 		.4byte	.LFE3-.LFB3
 529 00df 01       		.uleb128 0x1
 530 00e0 9C       		.byte	0x9c
 531 00e1 08       		.uleb128 0x8
 532 00e2 92000000 		.4byte	.LASF19
 533 00e6 01       		.byte	0x1
 534 00e7 E201     		.2byte	0x1e2
 535 00e9 00000000 		.4byte	.LFB4
 536 00ed 0C000000 		.4byte	.LFE4-.LFB4
 537 00f1 01       		.uleb128 0x1
 538 00f2 9C       		.byte	0x9c
 539 00f3 06010000 		.4byte	0x106
 540 00f7 09       		.uleb128 0x9
 541 00f8 18000000 		.4byte	.LASF21
 542 00fc 01       		.byte	0x1
 543 00fd E201     		.2byte	0x1e2
 544 00ff 76000000 		.4byte	0x76
 545 0103 01       		.uleb128 0x1
 546 0104 50       		.byte	0x50
 547 0105 00       		.byte	0
 548 0106 08       		.uleb128 0x8
 549 0107 32000000 		.4byte	.LASF20
 550 010b 01       		.byte	0x1
 551 010c 0402     		.2byte	0x204
 552 010e 00000000 		.4byte	.LFB5
 553 0112 0C000000 		.4byte	.LFE5-.LFB5
 554 0116 01       		.uleb128 0x1
 555 0117 9C       		.byte	0x9c
 556 0118 2B010000 		.4byte	0x12b
 557 011c 09       		.uleb128 0x9
 558 011d AD020000 		.4byte	.LASF22
 559 0121 01       		.byte	0x1
 560 0122 0402     		.2byte	0x204
 561 0124 76000000 		.4byte	0x76
 562 0128 01       		.uleb128 0x1
 563 0129 50       		.byte	0x50
 564 012a 00       		.byte	0
 565 012b 08       		.uleb128 0x8
 566 012c 1D020000 		.4byte	.LASF23
 567 0130 01       		.byte	0x1
 568 0131 AC02     		.2byte	0x2ac
 569 0133 00000000 		.4byte	.LFB6
 570 0137 0C000000 		.4byte	.LFE6-.LFB6
 571 013b 01       		.uleb128 0x1
 572 013c 9C       		.byte	0x9c
 573 013d 50010000 		.4byte	0x150
ARM GAS  C:\Users\Nick\AppData\Local\Temp\ccU8SSpN.s 			page 27


 574 0141 09       		.uleb128 0x9
 575 0142 0F020000 		.4byte	.LASF24
 576 0146 01       		.byte	0x1
 577 0147 AC02     		.2byte	0x2ac
 578 0149 6B000000 		.4byte	0x6b
 579 014d 01       		.uleb128 0x1
 580 014e 50       		.byte	0x50
 581 014f 00       		.byte	0
 582 0150 0A       		.uleb128 0xa
 583 0151 1D010000 		.4byte	.LASF25
 584 0155 01       		.byte	0x1
 585 0156 54       		.byte	0x54
 586 0157 00000000 		.4byte	.LFB1
 587 015b 70000000 		.4byte	.LFE1-.LFB1
 588 015f 01       		.uleb128 0x1
 589 0160 9C       		.byte	0x9c
 590 0161 AB010000 		.4byte	0x1ab
 591 0165 0B       		.uleb128 0xb
 592 0166 77010000 		.4byte	.LASF27
 593 016a 01       		.byte	0x1
 594 016b 57       		.byte	0x57
 595 016c 6B000000 		.4byte	0x6b
 596 0170 00000000 		.4byte	.LLST0
 597 0174 0C       		.uleb128 0xc
 598 0175 44000000 		.4byte	.LVL5
 599 0179 E1000000 		.4byte	0xe1
 600 017d 88010000 		.4byte	0x188
 601 0181 0D       		.uleb128 0xd
 602 0182 01       		.uleb128 0x1
 603 0183 50       		.byte	0x50
 604 0184 02       		.uleb128 0x2
 605 0185 09       		.byte	0x9
 606 0186 FF       		.byte	0xff
 607 0187 00       		.byte	0
 608 0188 0C       		.uleb128 0xc
 609 0189 4A000000 		.4byte	.LVL6
 610 018d 06010000 		.4byte	0x106
 611 0191 9B010000 		.4byte	0x19b
 612 0195 0D       		.uleb128 0xd
 613 0196 01       		.uleb128 0x1
 614 0197 50       		.byte	0x50
 615 0198 01       		.uleb128 0x1
 616 0199 31       		.byte	0x31
 617 019a 00       		.byte	0
 618 019b 0E       		.uleb128 0xe
 619 019c 50000000 		.4byte	.LVL7
 620 01a0 2B010000 		.4byte	0x12b
 621 01a4 0D       		.uleb128 0xd
 622 01a5 01       		.uleb128 0x1
 623 01a6 50       		.byte	0x50
 624 01a7 01       		.uleb128 0x1
 625 01a8 30       		.byte	0x30
 626 01a9 00       		.byte	0
 627 01aa 00       		.byte	0
 628 01ab 0A       		.uleb128 0xa
 629 01ac 7C000000 		.4byte	.LASF26
 630 01b0 01       		.byte	0x1
ARM GAS  C:\Users\Nick\AppData\Local\Temp\ccU8SSpN.s 			page 28


 631 01b1 37       		.byte	0x37
 632 01b2 00000000 		.4byte	.LFB0
 633 01b6 1C000000 		.4byte	.LFE0-.LFB0
 634 01ba 01       		.uleb128 0x1
 635 01bb 9C       		.byte	0x9c
 636 01bc D3010000 		.4byte	0x1d3
 637 01c0 0F       		.uleb128 0xf
 638 01c1 0C000000 		.4byte	.LVL8
 639 01c5 50010000 		.4byte	0x150
 640 01c9 0F       		.uleb128 0xf
 641 01ca 16000000 		.4byte	.LVL9
 642 01ce BF000000 		.4byte	0xbf
 643 01d2 00       		.byte	0
 644 01d3 10       		.uleb128 0x10
 645 01d4 50000000 		.4byte	.LASF31
 646 01d8 01       		.byte	0x1
 647 01d9 C702     		.2byte	0x2c7
 648 01db 6B000000 		.4byte	0x6b
 649 01df 00000000 		.4byte	.LFB7
 650 01e3 0C000000 		.4byte	.LFE7-.LFB7
 651 01e7 01       		.uleb128 0x1
 652 01e8 9C       		.byte	0x9c
 653 01e9 11       		.uleb128 0x11
 654 01ea 51010000 		.4byte	.LASF37
 655 01ee 01       		.byte	0x1
 656 01ef E102     		.2byte	0x2e1
 657 01f1 6B000000 		.4byte	0x6b
 658 01f5 00000000 		.4byte	.LFB8
 659 01f9 0C000000 		.4byte	.LFE8-.LFB8
 660 01fd 01       		.uleb128 0x1
 661 01fe 9C       		.byte	0x9c
 662 01ff 12020000 		.4byte	0x212
 663 0203 12       		.uleb128 0x12
 664 0204 70010000 		.4byte	.LASF28
 665 0208 01       		.byte	0x1
 666 0209 E302     		.2byte	0x2e3
 667 020b 6B000000 		.4byte	0x6b
 668 020f 01       		.uleb128 0x1
 669 0210 50       		.byte	0x50
 670 0211 00       		.byte	0
 671 0212 08       		.uleb128 0x8
 672 0213 BB000000 		.4byte	.LASF29
 673 0217 01       		.byte	0x1
 674 0218 FD02     		.2byte	0x2fd
 675 021a 00000000 		.4byte	.LFB9
 676 021e 0C000000 		.4byte	.LFE9-.LFB9
 677 0222 01       		.uleb128 0x1
 678 0223 9C       		.byte	0x9c
 679 0224 37020000 		.4byte	0x237
 680 0228 09       		.uleb128 0x9
 681 0229 E1000000 		.4byte	.LASF30
 682 022d 01       		.byte	0x1
 683 022e FD02     		.2byte	0x2fd
 684 0230 6B000000 		.4byte	0x6b
 685 0234 01       		.uleb128 0x1
 686 0235 50       		.byte	0x50
 687 0236 00       		.byte	0
ARM GAS  C:\Users\Nick\AppData\Local\Temp\ccU8SSpN.s 			page 29


 688 0237 10       		.uleb128 0x10
 689 0238 62020000 		.4byte	.LASF32
 690 023c 01       		.byte	0x1
 691 023d 3003     		.2byte	0x330
 692 023f 76000000 		.4byte	0x76
 693 0243 00000000 		.4byte	.LFB10
 694 0247 0C000000 		.4byte	.LFE10-.LFB10
 695 024b 01       		.uleb128 0x1
 696 024c 9C       		.byte	0x9c
 697 024d 10       		.uleb128 0x10
 698 024e 39020000 		.4byte	.LASF33
 699 0252 01       		.byte	0x1
 700 0253 7403     		.2byte	0x374
 701 0255 76000000 		.4byte	0x76
 702 0259 00000000 		.4byte	.LFB11
 703 025d 0C000000 		.4byte	.LFE11-.LFB11
 704 0261 01       		.uleb128 0x1
 705 0262 9C       		.byte	0x9c
 706 0263 13       		.uleb128 0x13
 707 0264 4F020000 		.4byte	.LASF38
 708 0268 01       		.byte	0x1
 709 0269 20       		.byte	0x20
 710 026a 6B000000 		.4byte	0x6b
 711 026e 05       		.uleb128 0x5
 712 026f 03       		.byte	0x3
 713 0270 00000000 		.4byte	CsBtns_PWM_initVar
 714 0274 00       		.byte	0
 715              		.section	.debug_abbrev,"",%progbits
 716              	.Ldebug_abbrev0:
 717 0000 01       		.uleb128 0x1
 718 0001 11       		.uleb128 0x11
 719 0002 01       		.byte	0x1
 720 0003 25       		.uleb128 0x25
 721 0004 0E       		.uleb128 0xe
 722 0005 13       		.uleb128 0x13
 723 0006 0B       		.uleb128 0xb
 724 0007 03       		.uleb128 0x3
 725 0008 0E       		.uleb128 0xe
 726 0009 1B       		.uleb128 0x1b
 727 000a 0E       		.uleb128 0xe
 728 000b 55       		.uleb128 0x55
 729 000c 17       		.uleb128 0x17
 730 000d 11       		.uleb128 0x11
 731 000e 01       		.uleb128 0x1
 732 000f 10       		.uleb128 0x10
 733 0010 17       		.uleb128 0x17
 734 0011 00       		.byte	0
 735 0012 00       		.byte	0
 736 0013 02       		.uleb128 0x2
 737 0014 24       		.uleb128 0x24
 738 0015 00       		.byte	0
 739 0016 0B       		.uleb128 0xb
 740 0017 0B       		.uleb128 0xb
 741 0018 3E       		.uleb128 0x3e
 742 0019 0B       		.uleb128 0xb
 743 001a 03       		.uleb128 0x3
 744 001b 0E       		.uleb128 0xe
ARM GAS  C:\Users\Nick\AppData\Local\Temp\ccU8SSpN.s 			page 30


 745 001c 00       		.byte	0
 746 001d 00       		.byte	0
 747 001e 03       		.uleb128 0x3
 748 001f 24       		.uleb128 0x24
 749 0020 00       		.byte	0
 750 0021 0B       		.uleb128 0xb
 751 0022 0B       		.uleb128 0xb
 752 0023 3E       		.uleb128 0x3e
 753 0024 0B       		.uleb128 0xb
 754 0025 03       		.uleb128 0x3
 755 0026 08       		.uleb128 0x8
 756 0027 00       		.byte	0
 757 0028 00       		.byte	0
 758 0029 04       		.uleb128 0x4
 759 002a 16       		.uleb128 0x16
 760 002b 00       		.byte	0
 761 002c 03       		.uleb128 0x3
 762 002d 0E       		.uleb128 0xe
 763 002e 3A       		.uleb128 0x3a
 764 002f 0B       		.uleb128 0xb
 765 0030 3B       		.uleb128 0x3b
 766 0031 0B       		.uleb128 0xb
 767 0032 49       		.uleb128 0x49
 768 0033 13       		.uleb128 0x13
 769 0034 00       		.byte	0
 770 0035 00       		.byte	0
 771 0036 05       		.uleb128 0x5
 772 0037 16       		.uleb128 0x16
 773 0038 00       		.byte	0
 774 0039 03       		.uleb128 0x3
 775 003a 0E       		.uleb128 0xe
 776 003b 3A       		.uleb128 0x3a
 777 003c 0B       		.uleb128 0xb
 778 003d 3B       		.uleb128 0x3b
 779 003e 05       		.uleb128 0x5
 780 003f 49       		.uleb128 0x49
 781 0040 13       		.uleb128 0x13
 782 0041 00       		.byte	0
 783 0042 00       		.byte	0
 784 0043 06       		.uleb128 0x6
 785 0044 35       		.uleb128 0x35
 786 0045 00       		.byte	0
 787 0046 49       		.uleb128 0x49
 788 0047 13       		.uleb128 0x13
 789 0048 00       		.byte	0
 790 0049 00       		.byte	0
 791 004a 07       		.uleb128 0x7
 792 004b 2E       		.uleb128 0x2e
 793 004c 00       		.byte	0
 794 004d 3F       		.uleb128 0x3f
 795 004e 19       		.uleb128 0x19
 796 004f 03       		.uleb128 0x3
 797 0050 0E       		.uleb128 0xe
 798 0051 3A       		.uleb128 0x3a
 799 0052 0B       		.uleb128 0xb
 800 0053 3B       		.uleb128 0x3b
 801 0054 0B       		.uleb128 0xb
ARM GAS  C:\Users\Nick\AppData\Local\Temp\ccU8SSpN.s 			page 31


 802 0055 27       		.uleb128 0x27
 803 0056 19       		.uleb128 0x19
 804 0057 11       		.uleb128 0x11
 805 0058 01       		.uleb128 0x1
 806 0059 12       		.uleb128 0x12
 807 005a 06       		.uleb128 0x6
 808 005b 40       		.uleb128 0x40
 809 005c 18       		.uleb128 0x18
 810 005d 9742     		.uleb128 0x2117
 811 005f 19       		.uleb128 0x19
 812 0060 00       		.byte	0
 813 0061 00       		.byte	0
 814 0062 08       		.uleb128 0x8
 815 0063 2E       		.uleb128 0x2e
 816 0064 01       		.byte	0x1
 817 0065 3F       		.uleb128 0x3f
 818 0066 19       		.uleb128 0x19
 819 0067 03       		.uleb128 0x3
 820 0068 0E       		.uleb128 0xe
 821 0069 3A       		.uleb128 0x3a
 822 006a 0B       		.uleb128 0xb
 823 006b 3B       		.uleb128 0x3b
 824 006c 05       		.uleb128 0x5
 825 006d 27       		.uleb128 0x27
 826 006e 19       		.uleb128 0x19
 827 006f 11       		.uleb128 0x11
 828 0070 01       		.uleb128 0x1
 829 0071 12       		.uleb128 0x12
 830 0072 06       		.uleb128 0x6
 831 0073 40       		.uleb128 0x40
 832 0074 18       		.uleb128 0x18
 833 0075 9742     		.uleb128 0x2117
 834 0077 19       		.uleb128 0x19
 835 0078 01       		.uleb128 0x1
 836 0079 13       		.uleb128 0x13
 837 007a 00       		.byte	0
 838 007b 00       		.byte	0
 839 007c 09       		.uleb128 0x9
 840 007d 05       		.uleb128 0x5
 841 007e 00       		.byte	0
 842 007f 03       		.uleb128 0x3
 843 0080 0E       		.uleb128 0xe
 844 0081 3A       		.uleb128 0x3a
 845 0082 0B       		.uleb128 0xb
 846 0083 3B       		.uleb128 0x3b
 847 0084 05       		.uleb128 0x5
 848 0085 49       		.uleb128 0x49
 849 0086 13       		.uleb128 0x13
 850 0087 02       		.uleb128 0x2
 851 0088 18       		.uleb128 0x18
 852 0089 00       		.byte	0
 853 008a 00       		.byte	0
 854 008b 0A       		.uleb128 0xa
 855 008c 2E       		.uleb128 0x2e
 856 008d 01       		.byte	0x1
 857 008e 3F       		.uleb128 0x3f
 858 008f 19       		.uleb128 0x19
ARM GAS  C:\Users\Nick\AppData\Local\Temp\ccU8SSpN.s 			page 32


 859 0090 03       		.uleb128 0x3
 860 0091 0E       		.uleb128 0xe
 861 0092 3A       		.uleb128 0x3a
 862 0093 0B       		.uleb128 0xb
 863 0094 3B       		.uleb128 0x3b
 864 0095 0B       		.uleb128 0xb
 865 0096 27       		.uleb128 0x27
 866 0097 19       		.uleb128 0x19
 867 0098 11       		.uleb128 0x11
 868 0099 01       		.uleb128 0x1
 869 009a 12       		.uleb128 0x12
 870 009b 06       		.uleb128 0x6
 871 009c 40       		.uleb128 0x40
 872 009d 18       		.uleb128 0x18
 873 009e 9742     		.uleb128 0x2117
 874 00a0 19       		.uleb128 0x19
 875 00a1 01       		.uleb128 0x1
 876 00a2 13       		.uleb128 0x13
 877 00a3 00       		.byte	0
 878 00a4 00       		.byte	0
 879 00a5 0B       		.uleb128 0xb
 880 00a6 34       		.uleb128 0x34
 881 00a7 00       		.byte	0
 882 00a8 03       		.uleb128 0x3
 883 00a9 0E       		.uleb128 0xe
 884 00aa 3A       		.uleb128 0x3a
 885 00ab 0B       		.uleb128 0xb
 886 00ac 3B       		.uleb128 0x3b
 887 00ad 0B       		.uleb128 0xb
 888 00ae 49       		.uleb128 0x49
 889 00af 13       		.uleb128 0x13
 890 00b0 02       		.uleb128 0x2
 891 00b1 17       		.uleb128 0x17
 892 00b2 00       		.byte	0
 893 00b3 00       		.byte	0
 894 00b4 0C       		.uleb128 0xc
 895 00b5 898201   		.uleb128 0x4109
 896 00b8 01       		.byte	0x1
 897 00b9 11       		.uleb128 0x11
 898 00ba 01       		.uleb128 0x1
 899 00bb 31       		.uleb128 0x31
 900 00bc 13       		.uleb128 0x13
 901 00bd 01       		.uleb128 0x1
 902 00be 13       		.uleb128 0x13
 903 00bf 00       		.byte	0
 904 00c0 00       		.byte	0
 905 00c1 0D       		.uleb128 0xd
 906 00c2 8A8201   		.uleb128 0x410a
 907 00c5 00       		.byte	0
 908 00c6 02       		.uleb128 0x2
 909 00c7 18       		.uleb128 0x18
 910 00c8 9142     		.uleb128 0x2111
 911 00ca 18       		.uleb128 0x18
 912 00cb 00       		.byte	0
 913 00cc 00       		.byte	0
 914 00cd 0E       		.uleb128 0xe
 915 00ce 898201   		.uleb128 0x4109
ARM GAS  C:\Users\Nick\AppData\Local\Temp\ccU8SSpN.s 			page 33


 916 00d1 01       		.byte	0x1
 917 00d2 11       		.uleb128 0x11
 918 00d3 01       		.uleb128 0x1
 919 00d4 31       		.uleb128 0x31
 920 00d5 13       		.uleb128 0x13
 921 00d6 00       		.byte	0
 922 00d7 00       		.byte	0
 923 00d8 0F       		.uleb128 0xf
 924 00d9 898201   		.uleb128 0x4109
 925 00dc 00       		.byte	0
 926 00dd 11       		.uleb128 0x11
 927 00de 01       		.uleb128 0x1
 928 00df 31       		.uleb128 0x31
 929 00e0 13       		.uleb128 0x13
 930 00e1 00       		.byte	0
 931 00e2 00       		.byte	0
 932 00e3 10       		.uleb128 0x10
 933 00e4 2E       		.uleb128 0x2e
 934 00e5 00       		.byte	0
 935 00e6 3F       		.uleb128 0x3f
 936 00e7 19       		.uleb128 0x19
 937 00e8 03       		.uleb128 0x3
 938 00e9 0E       		.uleb128 0xe
 939 00ea 3A       		.uleb128 0x3a
 940 00eb 0B       		.uleb128 0xb
 941 00ec 3B       		.uleb128 0x3b
 942 00ed 05       		.uleb128 0x5
 943 00ee 27       		.uleb128 0x27
 944 00ef 19       		.uleb128 0x19
 945 00f0 49       		.uleb128 0x49
 946 00f1 13       		.uleb128 0x13
 947 00f2 11       		.uleb128 0x11
 948 00f3 01       		.uleb128 0x1
 949 00f4 12       		.uleb128 0x12
 950 00f5 06       		.uleb128 0x6
 951 00f6 40       		.uleb128 0x40
 952 00f7 18       		.uleb128 0x18
 953 00f8 9742     		.uleb128 0x2117
 954 00fa 19       		.uleb128 0x19
 955 00fb 00       		.byte	0
 956 00fc 00       		.byte	0
 957 00fd 11       		.uleb128 0x11
 958 00fe 2E       		.uleb128 0x2e
 959 00ff 01       		.byte	0x1
 960 0100 3F       		.uleb128 0x3f
 961 0101 19       		.uleb128 0x19
 962 0102 03       		.uleb128 0x3
 963 0103 0E       		.uleb128 0xe
 964 0104 3A       		.uleb128 0x3a
 965 0105 0B       		.uleb128 0xb
 966 0106 3B       		.uleb128 0x3b
 967 0107 05       		.uleb128 0x5
 968 0108 27       		.uleb128 0x27
 969 0109 19       		.uleb128 0x19
 970 010a 49       		.uleb128 0x49
 971 010b 13       		.uleb128 0x13
 972 010c 11       		.uleb128 0x11
ARM GAS  C:\Users\Nick\AppData\Local\Temp\ccU8SSpN.s 			page 34


 973 010d 01       		.uleb128 0x1
 974 010e 12       		.uleb128 0x12
 975 010f 06       		.uleb128 0x6
 976 0110 40       		.uleb128 0x40
 977 0111 18       		.uleb128 0x18
 978 0112 9742     		.uleb128 0x2117
 979 0114 19       		.uleb128 0x19
 980 0115 01       		.uleb128 0x1
 981 0116 13       		.uleb128 0x13
 982 0117 00       		.byte	0
 983 0118 00       		.byte	0
 984 0119 12       		.uleb128 0x12
 985 011a 34       		.uleb128 0x34
 986 011b 00       		.byte	0
 987 011c 03       		.uleb128 0x3
 988 011d 0E       		.uleb128 0xe
 989 011e 3A       		.uleb128 0x3a
 990 011f 0B       		.uleb128 0xb
 991 0120 3B       		.uleb128 0x3b
 992 0121 05       		.uleb128 0x5
 993 0122 49       		.uleb128 0x49
 994 0123 13       		.uleb128 0x13
 995 0124 02       		.uleb128 0x2
 996 0125 18       		.uleb128 0x18
 997 0126 00       		.byte	0
 998 0127 00       		.byte	0
 999 0128 13       		.uleb128 0x13
 1000 0129 34       		.uleb128 0x34
 1001 012a 00       		.byte	0
 1002 012b 03       		.uleb128 0x3
 1003 012c 0E       		.uleb128 0xe
 1004 012d 3A       		.uleb128 0x3a
 1005 012e 0B       		.uleb128 0xb
 1006 012f 3B       		.uleb128 0x3b
 1007 0130 0B       		.uleb128 0xb
 1008 0131 49       		.uleb128 0x49
 1009 0132 13       		.uleb128 0x13
 1010 0133 3F       		.uleb128 0x3f
 1011 0134 19       		.uleb128 0x19
 1012 0135 02       		.uleb128 0x2
 1013 0136 18       		.uleb128 0x18
 1014 0137 00       		.byte	0
 1015 0138 00       		.byte	0
 1016 0139 00       		.byte	0
 1017              		.section	.debug_loc,"",%progbits
 1018              	.Ldebug_loc0:
 1019              	.LLST0:
 1020 0000 14000000 		.4byte	.LVL3
 1021 0004 18000000 		.4byte	.LVL4
 1022 0008 0100     		.2byte	0x1
 1023 000a 52       		.byte	0x52
 1024 000b 00000000 		.4byte	0
 1025 000f 00000000 		.4byte	0
 1026              		.section	.debug_aranges,"",%progbits
 1027 0000 74000000 		.4byte	0x74
 1028 0004 0200     		.2byte	0x2
 1029 0006 00000000 		.4byte	.Ldebug_info0
ARM GAS  C:\Users\Nick\AppData\Local\Temp\ccU8SSpN.s 			page 35


 1030 000a 04       		.byte	0x4
 1031 000b 00       		.byte	0
 1032 000c 0000     		.2byte	0
 1033 000e 0000     		.2byte	0
 1034 0010 00000000 		.4byte	.LFB2
 1035 0014 28000000 		.4byte	.LFE2-.LFB2
 1036 0018 00000000 		.4byte	.LFB3
 1037 001c 28000000 		.4byte	.LFE3-.LFB3
 1038 0020 00000000 		.4byte	.LFB4
 1039 0024 0C000000 		.4byte	.LFE4-.LFB4
 1040 0028 00000000 		.4byte	.LFB5
 1041 002c 0C000000 		.4byte	.LFE5-.LFB5
 1042 0030 00000000 		.4byte	.LFB6
 1043 0034 0C000000 		.4byte	.LFE6-.LFB6
 1044 0038 00000000 		.4byte	.LFB1
 1045 003c 70000000 		.4byte	.LFE1-.LFB1
 1046 0040 00000000 		.4byte	.LFB0
 1047 0044 1C000000 		.4byte	.LFE0-.LFB0
 1048 0048 00000000 		.4byte	.LFB7
 1049 004c 0C000000 		.4byte	.LFE7-.LFB7
 1050 0050 00000000 		.4byte	.LFB8
 1051 0054 0C000000 		.4byte	.LFE8-.LFB8
 1052 0058 00000000 		.4byte	.LFB9
 1053 005c 0C000000 		.4byte	.LFE9-.LFB9
 1054 0060 00000000 		.4byte	.LFB10
 1055 0064 0C000000 		.4byte	.LFE10-.LFB10
 1056 0068 00000000 		.4byte	.LFB11
 1057 006c 0C000000 		.4byte	.LFE11-.LFB11
 1058 0070 00000000 		.4byte	0
 1059 0074 00000000 		.4byte	0
 1060              		.section	.debug_ranges,"",%progbits
 1061              	.Ldebug_ranges0:
 1062 0000 00000000 		.4byte	.LFB2
 1063 0004 28000000 		.4byte	.LFE2
 1064 0008 00000000 		.4byte	.LFB3
 1065 000c 28000000 		.4byte	.LFE3
 1066 0010 00000000 		.4byte	.LFB4
 1067 0014 0C000000 		.4byte	.LFE4
 1068 0018 00000000 		.4byte	.LFB5
 1069 001c 0C000000 		.4byte	.LFE5
 1070 0020 00000000 		.4byte	.LFB6
 1071 0024 0C000000 		.4byte	.LFE6
 1072 0028 00000000 		.4byte	.LFB1
 1073 002c 70000000 		.4byte	.LFE1
 1074 0030 00000000 		.4byte	.LFB0
 1075 0034 1C000000 		.4byte	.LFE0
 1076 0038 00000000 		.4byte	.LFB7
 1077 003c 0C000000 		.4byte	.LFE7
 1078 0040 00000000 		.4byte	.LFB8
 1079 0044 0C000000 		.4byte	.LFE8
 1080 0048 00000000 		.4byte	.LFB9
 1081 004c 0C000000 		.4byte	.LFE9
 1082 0050 00000000 		.4byte	.LFB10
 1083 0054 0C000000 		.4byte	.LFE10
 1084 0058 00000000 		.4byte	.LFB11
 1085 005c 0C000000 		.4byte	.LFE11
 1086 0060 00000000 		.4byte	0
ARM GAS  C:\Users\Nick\AppData\Local\Temp\ccU8SSpN.s 			page 36


 1087 0064 00000000 		.4byte	0
 1088              		.section	.debug_line,"",%progbits
 1089              	.Ldebug_line0:
 1090 0000 36010000 		.section	.debug_str,"MS",%progbits,1
 1090      02004900 
 1090      00000201 
 1090      FB0E0D00 
 1090      01010101 
 1091              	.LASF15:
 1092 0000 72656731 		.ascii	"reg16\000"
 1092      3600
 1093              	.LASF17:
 1094 0006 43734274 		.ascii	"CsBtns_PWM_Enable\000"
 1094      6E735F50 
 1094      574D5F45 
 1094      6E61626C 
 1094      6500
 1095              	.LASF21:
 1096 0018 70657269 		.ascii	"period\000"
 1096      6F6400
 1097              	.LASF3:
 1098 001f 73686F72 		.ascii	"short unsigned int\000"
 1098      7420756E 
 1098      7369676E 
 1098      65642069 
 1098      6E7400
 1099              	.LASF20:
 1100 0032 43734274 		.ascii	"CsBtns_PWM_WriteCompare\000"
 1100      6E735F50 
 1100      574D5F57 
 1100      72697465 
 1100      436F6D70 
 1101              	.LASF11:
 1102 004a 666C6F61 		.ascii	"float\000"
 1102      7400
 1103              	.LASF31:
 1104 0050 43734274 		.ascii	"CsBtns_PWM_ReadStatusRegister\000"
 1104      6E735F50 
 1104      574D5F52 
 1104      65616453 
 1104      74617475 
 1105              	.LASF1:
 1106 006e 756E7369 		.ascii	"unsigned char\000"
 1106      676E6564 
 1106      20636861 
 1106      7200
 1107              	.LASF26:
 1108 007c 43734274 		.ascii	"CsBtns_PWM_Start\000"
 1108      6E735F50 
 1108      574D5F53 
 1108      74617274 
 1108      00
 1109              	.LASF14:
 1110 008d 72656738 		.ascii	"reg8\000"
 1110      00
 1111              	.LASF19:
 1112 0092 43734274 		.ascii	"CsBtns_PWM_WritePeriod\000"
ARM GAS  C:\Users\Nick\AppData\Local\Temp\ccU8SSpN.s 			page 37


 1112      6E735F50 
 1112      574D5F57 
 1112      72697465 
 1112      50657269 
 1113              	.LASF5:
 1114 00a9 6C6F6E67 		.ascii	"long unsigned int\000"
 1114      20756E73 
 1114      69676E65 
 1114      6420696E 
 1114      7400
 1115              	.LASF29:
 1116 00bb 43734274 		.ascii	"CsBtns_PWM_WriteControlRegister\000"
 1116      6E735F50 
 1116      574D5F57 
 1116      72697465 
 1116      436F6E74 
 1117              	.LASF9:
 1118 00db 75696E74 		.ascii	"uint8\000"
 1118      3800
 1119              	.LASF30:
 1120 00e1 636F6E74 		.ascii	"control\000"
 1120      726F6C00 
 1121              	.LASF12:
 1122 00e9 646F7562 		.ascii	"double\000"
 1122      6C6500
 1123              	.LASF35:
 1124 00f0 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\CsBtns_PWM.c\000"
 1124      6E657261 
 1124      7465645F 
 1124      536F7572 
 1124      63655C50 
 1125              	.LASF10:
 1126 0116 75696E74 		.ascii	"uint16\000"
 1126      313600
 1127              	.LASF25:
 1128 011d 43734274 		.ascii	"CsBtns_PWM_Init\000"
 1128      6E735F50 
 1128      574D5F49 
 1128      6E697400 
 1129              	.LASF8:
 1130 012d 756E7369 		.ascii	"unsigned int\000"
 1130      676E6564 
 1130      20696E74 
 1130      00
 1131              	.LASF7:
 1132 013a 6C6F6E67 		.ascii	"long long unsigned int\000"
 1132      206C6F6E 
 1132      6720756E 
 1132      7369676E 
 1132      65642069 
 1133              	.LASF37:
 1134 0151 43734274 		.ascii	"CsBtns_PWM_ReadControlRegister\000"
 1134      6E735F50 
 1134      574D5F52 
 1134      65616443 
 1134      6F6E7472 
 1135              	.LASF28:
ARM GAS  C:\Users\Nick\AppData\Local\Temp\ccU8SSpN.s 			page 38


 1136 0170 72657375 		.ascii	"result\000"
 1136      6C7400
 1137              	.LASF27:
 1138 0177 6374726C 		.ascii	"ctrl\000"
 1138      00
 1139              	.LASF34:
 1140 017c 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 1140      4320342E 
 1140      382E3420 
 1140      32303134 
 1140      30353236 
 1141 01af 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m3 -mthumb -g -O"
 1141      20726576 
 1141      6973696F 
 1141      6E203231 
 1141      31333538 
 1142 01e2 67202D66 		.ascii	"g -ffunction-sections\000"
 1142      66756E63 
 1142      74696F6E 
 1142      2D736563 
 1142      74696F6E 
 1143              	.LASF16:
 1144 01f8 73697A65 		.ascii	"sizetype\000"
 1144      74797065 
 1144      00
 1145              	.LASF6:
 1146 0201 6C6F6E67 		.ascii	"long long int\000"
 1146      206C6F6E 
 1146      6720696E 
 1146      7400
 1147              	.LASF24:
 1148 020f 696E7465 		.ascii	"interruptMode\000"
 1148      72727570 
 1148      744D6F64 
 1148      6500
 1149              	.LASF23:
 1150 021d 43734274 		.ascii	"CsBtns_PWM_SetInterruptMode\000"
 1150      6E735F50 
 1150      574D5F53 
 1150      6574496E 
 1150      74657272 
 1151              	.LASF33:
 1152 0239 43734274 		.ascii	"CsBtns_PWM_ReadPeriod\000"
 1152      6E735F50 
 1152      574D5F52 
 1152      65616450 
 1152      6572696F 
 1153              	.LASF38:
 1154 024f 43734274 		.ascii	"CsBtns_PWM_initVar\000"
 1154      6E735F50 
 1154      574D5F69 
 1154      6E697456 
 1154      617200
 1155              	.LASF32:
 1156 0262 43734274 		.ascii	"CsBtns_PWM_ReadCompare\000"
 1156      6E735F50 
 1156      574D5F52 
ARM GAS  C:\Users\Nick\AppData\Local\Temp\ccU8SSpN.s 			page 39


 1156      65616443 
 1156      6F6D7061 
 1157              	.LASF2:
 1158 0279 73686F72 		.ascii	"short int\000"
 1158      7420696E 
 1158      7400
 1159              	.LASF4:
 1160 0283 6C6F6E67 		.ascii	"long int\000"
 1160      20696E74 
 1160      00
 1161              	.LASF13:
 1162 028c 63686172 		.ascii	"char\000"
 1162      00
 1163              	.LASF18:
 1164 0291 43734274 		.ascii	"CsBtns_PWM_Stop\000"
 1164      6E735F50 
 1164      574D5F53 
 1164      746F7000 
 1165              	.LASF0:
 1166 02a1 7369676E 		.ascii	"signed char\000"
 1166      65642063 
 1166      68617200 
 1167              	.LASF22:
 1168 02ad 636F6D70 		.ascii	"compare\000"
 1168      61726500 
 1169              	.LASF36:
 1170 02b5 433A5C55 		.ascii	"C:\\Users\\Nick\\Dropbox\\Uni Docs\\y4s2\\ECE3091 -"
 1170      73657273 
 1170      5C4E6963 
 1170      6B5C4472 
 1170      6F70626F 
 1171 02e2 20456E67 		.ascii	" Engineering Design\\PSoc Creator\\eng_design_2015\\"
 1171      696E6565 
 1171      72696E67 
 1171      20446573 
 1171      69676E5C 
 1172 0313 45434533 		.ascii	"ECE3091-chickybot\\chickybot.cydsn\000"
 1172      3039312D 
 1172      63686963 
 1172      6B79626F 
 1172      745C6368 
 1173              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
